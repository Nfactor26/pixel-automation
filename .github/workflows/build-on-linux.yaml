name: Build for Linux

on: [workflow_call]

jobs:  
  build-for-linux:  
    runs-on: ${{ matrix.os }}
    strategy:
     matrix:
       os: [ubuntu-latest]
       dotnet-version: [ '6.0.x' ]   
    steps:   
    - name: Restore dependencies for pixel-runner
      run: dotnet restore src/Pixel.Automation.Test.Runner/Pixel.Automation.Test.Runner.csproj

    - name: Build Pixel.Automation.Test.Runner for runtime linux-64 and targetframework net6.0
      run: dotnet build src/Pixel.Automation.Test.Runner/Pixel.Automation.Test.Runner.csproj -c release --no-restore --runtime linux-x64 --self-contained false -p:TargetFramework=net6.0
    
    - name: Restore dependencies for pixel-persistence
      run: dotnet restore src/Pixel.Automation.Test.Runner/Pixel.Automation.Test.Runner.csproj

    - name: Publish pixel-persistence
      run: dotnet publish src/Pixel.Persistence.Services.Api/Pixel.Persistence.Services.Api.csproj -c Release --no-restore --runtime linux-x64 --self-contained false -o .builds/Release/Service

    - name: Upload Runner artifacts
      uses: actions/upload-artifact@v3
      with:
        name: pixel-runner-${{ matrix.os }}
        path: .builds/Release/Runner/linux-x64  
    
    - name: Upload Persistence artifacts
      uses: actions/upload-artifact@v3
      with:
        name: pixel-persistence-${{ matrix.os }}
        path: .builds/Release/Service/linux-x64   