name: build pixel persistence

on:
  workflow_call:
    inputs:
      target-os:
        required: true
        type: string

jobs:

  build-pixel-persistence:
   runs-on: ${{ inputs.target-os }}
   
   steps:
   
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.10.2
      with:
        versionSpec: '5.x'

    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Determine Version
      id:   gitversion
      uses: gittools/actions/gitversion/execute@v0.10.2

    - name: Display GitVersion outputs
      run: |   
        echo "MajorMinorPatch: ${{ steps.gitversion.outputs.majorMinorPatch }}"
        echo "SemVer: ${{ steps.gitversion.outputs.semVer }}"     
        echo "AssemblySemVer: ${{ steps.gitversion.outputs.assemblySemVer }}"
        echo "AssemblySemFileVer: ${{ steps.gitversion.outputs.assemblySemFileVer }}"
        echo "FullSemVer: ${{ steps.gitversion.outputs.fullSemVer }}"
        echo "InformationalVersion: ${{ steps.gitversion.outputs.informationalVersion }}"
        echo "BranchName: ${{ steps.gitversion.outputs.branchName }}"     
        echo "CommitsSinceVersionSource: ${{ steps.gitversion.outputs.commitsSinceVersionSource }}"
        echo "CommitsSinceVersionSourcePadded: ${{ steps.gitversion.outputs.commitsSinceVersionSourcePadded }}"
        echo "UncommittedChanges: ${{ steps.gitversion.outputs.uncommittedChanges }}"
        echo "CommitDate: ${{ steps.gitversion.outputs.commitDate }}"

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
       dotnet-version: ${{ matrix.dotnet-version }}

    - name : Cache nuget packages
      uses: actions/cache@v2
      with:
        path: ${{ github.workspace }}/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    - name: Restore dependencies
      run: dotnet restore src/Pixel.Persistence.Services.Api/Pixel.Persistence.Services.Api.csproj

    - name: Publish pixel-persistence
      run: dotnet publish src/Pixel.Persistence.Services.Api/Pixel.Persistence.Services.Api.csproj -c Release --no-restore -o .builds/release/service

    - name: Upload pixel-persistence artifacts
      uses: actions/upload-artifact@v3
      with:
        name: pixel-persistence-${{ inputs.target-os }}
        path: .builds/release/service 
