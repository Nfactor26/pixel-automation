name: setup gitversion and dotnet and checkout project

on: [workflow_call]

jobs:

  set-up-for-build:  
   runs-on: ${{ matrix.os }}
   strategy:
     matrix:
       os: [windows-latest, ubuntu-latest]
       dotnet-version: [ '6.0.x' ]   
   steps:
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.7
      with:
        versionSpec: '5.x'
    
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Determine Version
      id:   gitversion
      uses: gittools/actions/gitversion/execute@v0.9.7

    - name: Display GitVersion outputs
      run: |   
        echo "MajorMinorPatch: ${{ steps.gitversion.outputs.majorMinorPatch }}"
        echo "SemVer: ${{ steps.gitversion.outputs.semVer }}"     
        echo "AssemblySemVer: ${{ steps.gitversion.outputs.assemblySemVer }}"
        echo "AssemblySemFileVer: ${{ steps.gitversion.outputs.assemblySemFileVer }}"
        echo "FullSemVer: ${{ steps.gitversion.outputs.fullSemVer }}"
        echo "InformationalVersion: ${{ steps.gitversion.outputs.informationalVersion }}"
        echo "BranchName: ${{ steps.gitversion.outputs.branchName }}"     
        echo "CommitsSinceVersionSource: ${{ steps.gitversion.outputs.commitsSinceVersionSource }}"
        echo "CommitsSinceVersionSourcePadded: ${{ steps.gitversion.outputs.commitsSinceVersionSourcePadded }}"
        echo "UncommittedChanges: ${{ steps.gitversion.outputs.uncommittedChanges }}"
        echo "CommitDate: ${{ steps.gitversion.outputs.commitDate }}"

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
       dotnet-version: ${{ matrix.dotnet-version }}

    - name : Cache nuget packages
      uses: actions/cache@v2
      with:
        path: ${{ github.workspace }}/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
        restore-keys: |
          ${{ runner.os }}-nuget-
