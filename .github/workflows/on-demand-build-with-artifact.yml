name: Build on demand with artifact

on:
  workflow_dispatch:
  push:    
    tags:        
      - v*

jobs:

  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]
        dotnet-version: [ '6.0.x' ]

    steps:
 
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.7
      with:
        versionSpec: '5.x'
    
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Determine Version
      id:   gitversion
      uses: gittools/actions/gitversion/execute@v0.9.7

    - name: Display GitVersion outputs
      run: |   
        echo "MajorMinorPatch: ${{ steps.gitversion.outputs.majorMinorPatch }}"
        echo "SemVer: ${{ steps.gitversion.outputs.semVer }}"     
        echo "AssemblySemVer: ${{ steps.gitversion.outputs.assemblySemVer }}"
        echo "AssemblySemFileVer: ${{ steps.gitversion.outputs.assemblySemFileVer }}"
        echo "FullSemVer: ${{ steps.gitversion.outputs.fullSemVer }}"
        echo "InformationalVersion: ${{ steps.gitversion.outputs.informationalVersion }}"
        echo "BranchName: ${{ steps.gitversion.outputs.branchName }}"     
        echo "CommitsSinceVersionSource: ${{ steps.gitversion.outputs.commitsSinceVersionSource }}"
        echo "CommitsSinceVersionSourcePadded: ${{ steps.gitversion.outputs.commitsSinceVersionSourcePadded }}"
        echo "UncommittedChanges: ${{ steps.gitversion.outputs.uncommittedChanges }}"
        echo "CommitDate: ${{ steps.gitversion.outputs.commitDate }}"

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
       dotnet-version: ${{ matrix.dotnet-version }}

    - name : Cache nuget packages
      uses: actions/cache@v2
      with:
        path: ${{ github.workspace }}/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    - name: Restore dependencies
      run: dotnet restore Pixel.Automation.sln

    - name: Build
      run: dotnet build Pixel.Automation.sln -c Release --no-restore
      
    - name: Test
      run: dotnet test Pixel.Automation.sln -c Release --no-build --verbosity normal

    - name: Upload Designer artifacts
      uses: actions/upload-artifact@v3
      with:
        name: pixel-designer-${{ matrix.os }}
        path: .builds/Release/Designer
    
    - name: Upload Runner artifacts
      uses: actions/upload-artifact@v3
      with:
        name: pixel-runner-${{ matrix.os }}
        path: .builds/Release/Runner  
    
    - name: Upload Persistence artifacts
      uses: actions/upload-artifact@v3
      with:
        name: pixel-persistence-${{ matrix.os }}
        path: .builds/Release/Persistence    
