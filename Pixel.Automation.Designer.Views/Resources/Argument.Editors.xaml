<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Pixel.Automation.Designer.Views"
                    xmlns:Metro="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                    xmlns:cal="http://www.caliburnproject.org"                   
                    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
                    xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro">
  
    <Style TargetType="Button" x:Key="ChangeArgumentTypeButtonStyle" BasedOn="{StaticResource MahApps.Styles.Button.Square}">
        <Setter Property="BorderBrush" Value="#FFCCCCCC"/>
        <Setter Property="BorderThickness" Value="0,1,1,1"/>
        <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Normal" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource MahApps.Colors.Gray8}" />
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
                <Setter Property="BorderThickness" Value="1"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="InArgumentToggleStateStyle" TargetType="ToggleButton" BasedOn="{StaticResource MahApps.Styles.Button.Square}">
        <Setter Property="BorderBrush" Value="#FFCCCCCC"/>
        <Setter Property="BorderThickness" Value="0,1,1,1" />
        <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Normal" />
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="False">
                <Setter Property="Content">
                    <Setter.Value>
                        B
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsChecked" Value="{x:Null}">
                <Setter Property="Content">
                    <Setter.Value>
                        D
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Content">
                    <Setter.Value>
                        S
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource MahApps.Colors.Gray8}" />
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
                <Setter Property="BorderThickness" Value="1"/>
            </Trigger>
            <!--<DataTrigger Binding="{Binding OwnerComponent.EntityManager, ElementName=InArgumentControl}" Value="{x:Null}">
                <Setter Property="Visibility" Value="Collapsed"/>
            </DataTrigger>-->
        </Style.Triggers>
    </Style>

    <Style x:Key="OutArgumentToggleStateStyle" TargetType="ToggleButton" BasedOn="{StaticResource MahApps.Styles.Button.Square}">
        <Setter Property="BorderBrush" Value="#FFCCCCCC"/>
        <Setter Property="BorderThickness" Value="0,1,1,1" />
        <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Normal" />
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="False">
                <Setter Property="Content">
                    <Setter.Value>
                        B
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Content">
                    <Setter.Value>
                        S
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource MahApps.Colors.Gray8}" />
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
                <Setter Property="BorderThickness" Value="1"/>
            </Trigger>
            <!--<DataTrigger Binding="{Binding OwnerComponent.EntityManager, ElementName=OutArgumentControl}" Value="{x:Null}">
                <Setter Property="Visibility" Value="Collapsed"/>
            </DataTrigger>-->
        </Style.Triggers>
    </Style>

    <!-- InArgument Data Templates-->
    <DataTemplate x:Key="InArgument_Default">
        <TextBox x:Name="DefaultValueTextBox"  DataContext="{Binding Path=DataContext, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ContentControl}}"
                 Text="{Binding Path=DefaultValue,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Metro:TextBoxHelper.UseFloatingWatermark="True"
                 Metro:TextBoxHelper.Watermark="{Binding ArgumentType}" Metro:TextBoxHelper.ClearTextButton="True" />
    </DataTemplate>

    <DataTemplate x:Key="InArgument_ScreenCoordinate">
        <StackPanel Orientation="Vertical">
            <TextBox x:Name="XCoordinate"  DataContext="{Binding Path=DataContext, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ContentControl}}"
                 Text="{Binding Path=DefaultValue.XCoordinate,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Metro:TextBoxHelper.UseFloatingWatermark="True"
                 Metro:TextBoxHelper.Watermark="x-coordinate" Metro:TextBoxHelper.ClearTextButton="True" />
            <TextBox x:Name="YCoordinate"  DataContext="{Binding Path=DataContext, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ContentControl}}"
                 Text="{Binding Path=DefaultValue.YCoordinate,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Metro:TextBoxHelper.UseFloatingWatermark="True"
                 Metro:TextBoxHelper.Watermark="y-coordinate" Metro:TextBoxHelper.ClearTextButton="True" />
        </StackPanel>        
    </DataTemplate>

</ResourceDictionary>