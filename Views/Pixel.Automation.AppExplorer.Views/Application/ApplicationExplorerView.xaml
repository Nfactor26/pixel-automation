<UserControl x:Class="Pixel.Automation.AppExplorer.Views.Application.ApplicationExplorerView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
             xmlns:dd="clr-namespace:GongSolutions.Wpf.DragDrop;assembly=GongSolutions.Wpf.DragDrop"
             xmlns:cal="http://www.caliburnproject.org"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks" cal:Bind.AtDesignTime="True"
             xmlns:local="clr-namespace:Pixel.Automation.AppExplorer.Views.Application"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">

    <UserControl.Resources>

        <BooleanToVisibilityConverter x:Key="boolToVisibilityConverter"/>
        <local:ApplicationTemplateSelector x:Key="AppTemplateSelector"/>

        <DataTemplate x:Key="DefaultApplication">
            <Border IsHitTestVisible="True" Background="{DynamicResource  MahApps.Brushes.Control.Background}" BorderThickness="0">
                <iconPacks:PackIconMaterial Width="{TemplateBinding Width}"
                                        Height="{TemplateBinding Height}"
                                        IsHitTestVisible="False"
                                        Margin="2"
                                        Padding="4"                                      
                                        Kind="Application" />
            </Border>          
        </DataTemplate>

        <DataTemplate x:Key="WinApplication">
            <Border IsHitTestVisible="True" Background="{DynamicResource  MahApps.Brushes.Control.Background}" BorderThickness="0">
                <iconPacks:PackIconMaterial Width="{TemplateBinding Width}"
                                        Height="{TemplateBinding Height}"
                                        IsHitTestVisible="False"
                                        Margin="2"
                                        Padding="4"                                      
                                        Kind="Windows" />
            </Border>
        </DataTemplate>

        <DataTemplate x:Key="WebApplication">
            <Border IsHitTestVisible="True" Background="{DynamicResource  MahApps.Brushes.Control.Background}" BorderThickness="0">
                <iconPacks:PackIconEntypo Width="{TemplateBinding Width}"
                                        Height="{TemplateBinding Height}"
                                        IsHitTestVisible="False"
                                        Margin="2"
                                        Padding="4"                                      
                                        Kind="Browser" />
            </Border>          
        </DataTemplate>

        <Style x:Key="AddApplicationButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Control.Background}"></Setter>
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Accent2}"/>
            <Setter Property="Width" Value="32"/>
            <Setter Property="Height" Value="32"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>                      
                            <Border IsHitTestVisible="True" Background="{DynamicResource  MahApps.Brushes.Control.Background}" BorderThickness="0">
                                <iconPacks:PackIconMaterial x:Name="PlusIcon" Width="{TemplateBinding Width}"
                                        Height="{TemplateBinding Height}" IsHitTestVisible="False"
                                        Margin="2"
                                        Padding="4"
                                        Foreground="{DynamicResource MahApps.Brushes.Accent2}"
                                        Kind="PlusCircleOutline" />
                            </Border>                    
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="PlusIcon" Property="Foreground" Value="Gray"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ContextMenu">
                <Setter.Value>
                    <ContextMenu ItemsSource="{Binding Path=KnownApplications}">
                        <ContextMenu.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="Vertical"></StackPanel>
                            </ItemsPanelTemplate>
                        </ContextMenu.ItemsPanel>
                        <ContextMenu.ItemTemplate>
                            <DataTemplate>
                                <MenuItem Header="{Binding DisplayName}" ToolTip="{Binding Description}" Style="{x:Null}"
                                          cal:Action.TargetWithoutContext="{Binding Path=DataContext, RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}}" cal:Message.Attach="[Event Click] = [Action AddApplication($dataContext)]"/>
                            </DataTemplate>
                        </ContextMenu.ItemTemplate>
                    </ContextMenu>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="label" TargetType="{x:Type TextBox}">
            <Setter Property="IsReadOnly" Value="True"></Setter>
            <Setter Property="HorizontalAlignment" Value="Center"></Setter>
            <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
            <Setter Property="TextWrapping" Value="Wrap"></Setter>
            <Setter Property="BorderThickness" Value="0"></Setter>
            <Setter Property="FontSize" Value="12"></Setter>
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding
                            RelativeSource={RelativeSource
                                Mode=FindAncestor,
                                AncestorType={x:Type ListBoxItem}},
                                Path=IsSelected}" Value="True"></Condition>
                        <Condition Binding="{Binding
                            RelativeSource={RelativeSource
                                Mode=FindAncestor,
                                AncestorType={x:Type ListBox}},
                                Path=DataContext.CanEdit}" Value="True"></Condition>
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter Property="IsReadOnly" Value="False"></Setter>
                        <Setter Property="BorderThickness" Value="2"></Setter>
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}, Path=IsSelected}" Value="True">
                    <Setter Property="FontSize" Value="14"></Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style  x:Key="LinkButton"  TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <TextBlock TextDecorations="Underline">
                        <ContentPresenter/>
                        </TextBlock>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Accent}" />
            <Setter Property="Margin" Value="10,5,0,5" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Foreground" Value="Red" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type ListBoxItem}" x:Key="ApplicationListBoxItem">
            <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Accent3}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <ContentPresenter/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Accent2}"/>
                </Trigger>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Highlight}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="AppListStyle" TargetType="ListBox">
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <WrapPanel  IsItemsHost="True"  Width="{Binding Path=Width, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}" Orientation="Horizontal"/>
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <StackPanel x:Name="ApplicationPlaceHolder" Margin="10" Orientation="Vertical" Height="80" Width="100" Background="{DynamicResource MahApps.Brushes.Control.Background}">
                            <StackPanel.ContextMenu>
                                <ContextMenu>
                                    <ContextMenu.Template>
                                        <ControlTemplate>
                                            <StackPanel>
                                                <MenuItem x:Name="Open" Header="Open" cal:Action.TargetWithoutContext="{Binding Path=DataContext, RelativeSource={RelativeSource AncestorType={x:Type Grid}}}" cal:Message.Attach="[Event Click] = [Action OpenApplication($dataContext)]" ></MenuItem>
                                                <!--<MenuItem x:Name="Save" Header="Save" cal:Action.TargetWithoutContext="{Binding Path=DataContext, RelativeSource={RelativeSource AncestorType={x:Type Grid}}}" cal:Message.Attach="[Event Click] = [Action SaveApplicationAsync($dataContext)]" ></MenuItem>-->
                                                <MenuItem x:Name="Edit" Header="Edit" cal:Action.TargetWithoutContext="{Binding Path=DataContext, RelativeSource={RelativeSource AncestorType={x:Type Grid}}}" cal:Message.Attach="[Event Click] = [Action EditApplicationAsync($dataContext)]" ></MenuItem>
                                                <MenuItem x:Name="Rename" Header="Rename" cal:Action.TargetWithoutContext="{Binding Path=DataContext, RelativeSource={RelativeSource AncestorType={x:Type Grid}}}" cal:Message.Attach="[Event Click] = [Action ToggleRename($dataContext)]" ></MenuItem>                                                
                                            </StackPanel>
                                        </ControlTemplate>
                                    </ContextMenu.Template>
                                </ContextMenu>
                            </StackPanel.ContextMenu>
                            <ContentControl x:Name="ApplicationIcon" Content="{Binding ApplicationDetails}"
                                            ContentTemplateSelector="{StaticResource AppTemplateSelector}"  Background="{DynamicResource MahApps.Brushes.Control.Background}"
                                            cal:Action.TargetWithoutContext="{Binding Path=DataContext, RelativeSource={RelativeSource AncestorType={x:Type Grid}}}"
                                            cal:Message.Attach="[Event MouseDoubleClick] = [Action OpenApplication($dataContext)];"
                                            Margin="2" Width="40" Height="40" ToolTip="{Binding ApplicationName}"></ContentControl>
                            <TextBox x:Name="Name" Text="{Binding ApplicationName}"   Margin="5"  IsHitTestVisible="True"  Style="{StaticResource label}" Height="20" Width="90"
                                         cal:Action.TargetWithoutContext="{Binding Path=DataContext, RelativeSource={RelativeSource AncestorType={x:Type Grid}}}"
                                         cal:Message.Attach="[Event KeyDown] = [Action RenameApplication($executionContext,$dataContext)];
                                         [Event MouseDoubleClick] = [Action ToggleRename($dataContext)];"
                            ></TextBox>
                        </StackPanel>

                    </DataTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemContainerStyle" Value="{StaticResource ApplicationListBoxItem}"/>
        </Style>

        <Style x:Key="ApplicationViewStyle" TargetType="StackPanel">
            <Setter Property="Visibility" Value="Collapsed"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsApplicationOpen}" Value="False">
                    <Setter Property="Visibility" Value="Visible"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

    </UserControl.Resources>

    <Grid Margin="5,5,0,0" Background="{DynamicResource MahApps.Brushes.Control.Background}">

        <StackPanel x:Name="ApplicationView" HorizontalAlignment="Stretch" Margin="0,4,0,6"  Orientation="Vertical" Style="{StaticResource ApplicationViewStyle}">

            <StackPanel Orientation="Horizontal">

                <TextBox Name="Filter" Margin="6,1,0,1" Text="{Binding FilterText,UpdateSourceTrigger=PropertyChanged}" controls:TextBoxHelper.ClearTextButton="True"                      
                             controls:TextBoxHelper.UseFloatingWatermark="False"                     
                             controls:TextBoxHelper.Watermark="Search"   Grid.Column="0" HorizontalAlignment="Left"
                                 Width="250"/>
                <Separator Width="1" Margin="10,0,0,0" BorderThickness="1" BorderBrush="{DynamicResource MahApps.Brushes.Accent}"/>

                <Button x:Name="AddNewApplication" Click="AddApplication" HorizontalAlignment="Right"  Tag="{Binding KnownApplications}"                         
                            Margin="0,0,10,0" Style="{StaticResource AddApplicationButtonStyle}"/>

            </StackPanel>


            <ListBox  x:Name="Applications" SelectedItem="{Binding SelectedApplication}"
                Width="{Binding Path=Width, RelativeSource={RelativeSource AncestorType={x:Type Grid}}}"                
                Style="{StaticResource AppListStyle}" BorderThickness="0" Background="{DynamicResource MahApps.Brushes.Control.Background}"
                dd:DragDrop.IsDragSource="True"  ScrollViewer.VerticalScrollBarVisibility="Auto"
                ScrollViewer.HorizontalScrollBarVisibility="Disabled">
            </ListBox>

        </StackPanel>

        <controls:MetroAnimatedSingleRowTabControl x:Name="MainTabControl" SelectedIndex="0"
             Visibility="{Binding IsApplicationOpen,Converter={StaticResource boolToVisibilityConverter}}"      
             controls:TabControlHelper.Underlined="None"
             HorizontalAlignment="Stretch" TabStripPlacement="Bottom">
            <TabItem Header="Controls" IsSelected="True" controls:HeaderedControlHelper.HeaderFontSize="18">
                <ContentControl cal:View.Model="{Binding ControlExplorer}" />
            </TabItem>
            <TabItem Header="Prefabs" controls:HeaderedControlHelper.HeaderFontSize="18">
                <ContentControl cal:View.Model="{Binding PrefabExplorer}"  />
            </TabItem>
        </controls:MetroAnimatedSingleRowTabControl>

    </Grid>
    
</UserControl>

