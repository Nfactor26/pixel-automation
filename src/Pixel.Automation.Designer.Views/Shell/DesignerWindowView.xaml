<UserControl x:Class="Pixel.Automation.Designer.Views.DesignerWindowView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"      
        xmlns:docking="clr-namespace:Pixel.Automation.Editor.Core.Docking;assembly=Pixel.Automation.Editor.Core"
        xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        xmlns:avalonDock="https://github.com/Dirkster99/AvalonDock"
        xmlns:cal="http://www.caliburnproject.org" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
        xmlns:avalonTheme="clr-namespace:Xceed.Wpf.AvalonDock.Themes;assembly=Xceed.Wpf.AvalonDock.Themes.MahApps"
        mc:Ignorable="d">
    <UserControl.Resources>
        <ResourceDictionary>
           
            <avalonDock:BoolToVisibilityConverter x:Key="boolToVisConverter"/>

            <Thickness x:Key="ControlMargin">0 5 0 0</Thickness>

            <Style x:Key="ScrapperMenuItemStyle" BasedOn="{StaticResource MahApps.Styles.MenuItem}"
                   TargetType="{x:Type MenuItem}">
                <Setter Property="Header" Value="{Binding DisplayName, Mode=OneWay}" />
                <Setter Property="IsCheckable" Value="True"/>
                <Setter Property="IsEnabled" Value="{Binding CanToggleScrapper}" />
                <Setter Property="IsChecked" Value="{Binding IsCapturing,Mode=TwoWay}"/>
                <Setter Property="cal:Message.Attach" Value="[Event Click] = [Action ToggleCapture()]"/>
            </Style>
            
            <!--<Style TargetType="avalonDock:AnchorablePaneTitle">
                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Highlight}"></Setter>                
            </Style>-->

            <Style x:Key="CustomFlyoutStyle" BasedOn="{StaticResource {x:Type Controls:Flyout}}" TargetType="{x:Type Controls:Flyout}">
                <Setter Property="Header" Value="{Binding Header}" />
                <Setter Property="IsOpen" Value="{Binding IsOpen}" />
                <Setter Property="Position" Value="{Binding Position}" />
                <Setter Property="Theme" Value="{Binding Theme}" />
            </Style>

            <Style TargetType="{x:Type Controls:MetroContentControl}">
                <Setter Property="BorderBrush" Value="{x:Null}"/>
                <Setter Property="BorderThickness" Value="0"/>
            </Style>  

        </ResourceDictionary>
    </UserControl.Resources>
    
    <DockPanel>        
        <Menu  VerticalAlignment="Stretch" HorizontalAlignment="Left" DockPanel.Dock="Top">
            
            <MenuItem x:Name="File" Header="File" Style="{StaticResource MahApps.Styles.MenuItem}">
                <MenuItem x:Name="DoNew" Header="New" ToolTip="Create a new Automation Project"/>
                <MenuItem x:Name="DoOpen"  Header="Open" ToolTip="Open Automation Project from disk"/>              
                <Separator></Separator>
                <MenuItem x:Name="Save"  Header="Save" ToolTip="Save"/>
                <MenuItem x:Name="SaveAll"  Header="Save All" ToolTip="Save All"/>
            </MenuItem>
            
            <MenuItem x:Name="View" Header="View"  Style="{StaticResource MahApps.Styles.MenuItem}">
                <MenuItem x:Name="ApplicationsToolBox" Header="Applications Window" ToolTip="Show Applications toolbox" cal:Message.Attach="[Event Click] = [Action ShowToolBox('Applications')]"/>
                <MenuItem x:Name="ComponentsToolBox" Header="Components Window" ToolTip="Show Components toolbox" cal:Message.Attach="[Event Click] = [Action ShowToolBox('Components')]"/>
                <MenuItem x:Name="PropertiesToolBox" Header="Properties Window" ToolTip="Show Properties toolbox" cal:Message.Attach="[Event Click] = [Action ShowToolBox('Properties')]"/>
                <MenuItem x:Name="PrefabsToolBox" Header="Prefabs Window" ToolTip="Show Prefabs toolbox" cal:Message.Attach="[Event Click] = [Action ShowToolBox('Prefabs')]"/>
                <Separator></Separator>
                <MenuItem x:Name="ShowStartPage"  Header="Start Page" ToolTip="Show Start Page"/>
            </MenuItem>
            
            <MenuItem x:Name="Project" Header="Project"  Style="{StaticResource MahApps.Styles.MenuItem}">
                <MenuItem x:Name="Manage" Header="Manage">
                    <MenuItem x:Name="ManageProjectVersionAsync" Header="Project Version" ToolTip="Manage versions and their deployment"/>
                    <MenuItem x:Name="ManagePrefabReferencesAsync" Header="Prefab References" ToolTip="Manage prefab versions in use"/>
                </MenuItem>
                <MenuItem x:Name="EditDataModelAsync" Header="Edit Model" ToolTip="Open DataModel for editing using inbuilt editor"/>
                <MenuItem x:Name="EditScriptAsync" Header="Edit Script" ToolTip="Open default initialization script for editing"/>
            </MenuItem>
           
            <MenuItem x:Name="ScreenScrappers"  Header="Screen Scrappers"
                          ItemsSource="{Binding ScreenScrappers, Mode=OneWay}"
                          ItemContainerStyle="{StaticResource ScrapperMenuItemStyle}">
            </MenuItem>
        </Menu>
        <avalonDock:DockingManager x:Name="Manager" DocumentsSource="{Binding Items}" AnchorablesSource="{Binding Anchorables}"
                                   GridSplitterVerticalStyle="{DynamicResource {x:Type avalonDock:LayoutGridResizerControl}}"
                                   GridSplitterHorizontalStyle="{DynamicResource {x:Type avalonDock:LayoutGridResizerControl}}"
							       ActiveContent="{Binding ActiveItem, Mode=TwoWay}" LayoutUpdated="OnManagerLayoutUpdated">
            <avalonDock:DockingManager.LayoutItemTemplateSelector>
                <docking:PanesTemplateSelector>
                    <docking:PanesTemplateSelector.ScreenTemplate>
                        <DataTemplate>
                            <Grid Background="{DynamicResource MahApps.Brushes.Window.Background}">
                                <ContentControl cal:View.Model="{Binding}" IsTabStop="False" />
                            </Grid>
                        </DataTemplate>
                    </docking:PanesTemplateSelector.ScreenTemplate>
                    <docking:PanesTemplateSelector.ToolTemplate>
                        <DataTemplate>
                            <ContentControl cal:View.Model="{Binding}" Background="{DynamicResource MahApps.Brushes.Window.Background}"
                                                IsTabStop="False" />
                        </DataTemplate>
                    </docking:PanesTemplateSelector.ToolTemplate>
                </docking:PanesTemplateSelector>
            </avalonDock:DockingManager.LayoutItemTemplateSelector>

            <avalonDock:DockingManager.LayoutItemContainerStyleSelector>
                <docking:PanesStyleSelector>
                    <docking:PanesStyleSelector.ScreenStyle>
                        <Style TargetType="{x:Type avalonDock:LayoutItem}">                          
                            <Setter Property="Title" Value="{Binding Model.DisplayName, Mode=OneWay}" />
                            <Setter Property="CloseCommand" Value="{Binding Model.CloseCommand}" />
                            <Setter Property="IsSelected" Value="{Binding Model.IsSelected, Mode=TwoWay}" />
                            <Setter Property="Visibility" Value="{Binding Model.IsVisible, ConverterParameter={x:Static Visibility.Hidden}, Converter={StaticResource boolToVisConverter},Mode=TwoWay}" /> 
                        </Style>
                    </docking:PanesStyleSelector.ScreenStyle>
                    <docking:PanesStyleSelector.ToolStyle>
                        <Style TargetType="{x:Type avalonDock:LayoutAnchorableItem}">                          
                            <Setter Property="Title" Value="{Binding Model.DisplayName, Mode=OneWay}" />
                            <Setter Property="HideCommand" Value="{Binding Model.CloseCommand}" />
                            <Setter Property="IsActive" Value="{Binding Model.IsSelected, Mode=OneWay}" />
                            <Setter Property="IsSelected" Value="{Binding Model.IsSelected, Mode=TwoWay}" />
                            <Setter Property="Visibility" Value="{Binding Model.IsVisible, ConverterParameter={x:Static Visibility.Hidden}, Converter={StaticResource boolToVisConverter},Mode=TwoWay}" />
                        </Style>
                    </docking:PanesStyleSelector.ToolStyle>
                </docking:PanesStyleSelector>
            </avalonDock:DockingManager.LayoutItemContainerStyleSelector>

            <avalonDock:DockingManager.LayoutUpdateStrategy>
                <docking:LayoutInitializer />
            </avalonDock:DockingManager.LayoutUpdateStrategy>

            <avalonDock:DockingManager.Theme>
                <!--<avalonDock:MetroTheme/>-->
                <avalonTheme:MahAppsTheme/>
            </avalonDock:DockingManager.Theme>

            <avalonDock:LayoutRoot>
                <avalonDock:LayoutPanel x:Name="VerticalPanel" Orientation="Vertical">
                    <avalonDock:LayoutPanel x:Name="HorizontalPanel" Orientation="Horizontal">
                        <avalonDock:LayoutDocumentPane />
                    </avalonDock:LayoutPanel>
                </avalonDock:LayoutPanel>
            </avalonDock:LayoutRoot>

        </avalonDock:DockingManager>        
        <!--<StatusBar>
            <StatusBarItem Content="{Binding Status}"></StatusBarItem>
        </StatusBar>-->        
    </DockPanel>
</UserControl>
