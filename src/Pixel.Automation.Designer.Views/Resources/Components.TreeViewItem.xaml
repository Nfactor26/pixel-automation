<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:dd="clr-namespace:GongSolutions.Wpf.DragDrop;assembly=GongSolutions.Wpf.DragDrop"
                    xmlns:converters="clr-namespace:Pixel.Automation.Designer.Views.Converters"                   
                    xmlns:Metro="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                    xmlns:cal="http://www.caliburnproject.org"                   
                    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
                    xmlns:local="clr-namespace:Pixel.Automation.Designer.Views">

    <local:ComponentDataTemplateSelector x:Key="ComponentTemplateSelector"/>
    <local:ComponentStyleSelector x:Key="ComponentStyleSelector"/>
    <converters:HorizontalLineConverter x:Key="horzLineConv"/>
    <converters:VerticalLineConverter x:Key="vertLineConv"/>
    
    <Style TargetType="TreeViewItem" x:Key="SlimStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TreeViewItem">
                    <ContentPresenter  ContentSource="Header" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  Margin="0,2,0,2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel  HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="Transparent"
                                 IsItemsHost="True"  Orientation="Vertical" Tag="Contained"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="TreeViewItem" x:Key="DefaultStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TreeViewItem">
                    <Grid Width="Auto">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <!-- Horizontal line to the left -->
                        <Rectangle x:Name="LeftConnector" Grid.Column="0" HorizontalAlignment="Stretch" VerticalAlignment="Top" Width="40" Margin="0,23,0,0"
                            Stroke="{DynamicResource MahApps.Brushes.Accent}" SnapsToDevicePixels="False" Visibility="Collapsed">
                            <Rectangle.Height>
                                <Binding  Mode="OneWay"  Converter="{StaticResource horzLineConv}" ConverterParameter="left"  RelativeSource="{RelativeSource
                                     AncestorLevel=1,  AncestorType={x:Type TreeViewItem}}"/>
                            </Rectangle.Height>
                        </Rectangle>

                        <!-- Vertical line below node -->
                        <Rectangle x:Name="VerticalBottomLine"  Grid.Column="0"  Height="Auto"   Stroke="{DynamicResource MahApps.Brushes.Accent}" HorizontalAlignment="Left" 
                                   VerticalAlignment="Stretch" SnapsToDevicePixels="False" Margin="0,23,0,-23">
                            <Rectangle.Width>
                                <MultiBinding Converter="{StaticResource vertLineConv}">
                                    <Binding Path="DataContext.ComponentCollection.Count" Mode="OneWay" RelativeSource="{RelativeSource Mode=FindAncestor, 
                                        AncestorLevel=2, AncestorType={x:Type TreeViewItem}}" FallbackValue="1"/>
                                    <Binding Mode="OneWay" Path="DataContext.ProcessOrder" RelativeSource="{RelativeSource Mode=FindAncestor, 
                                        AncestorLevel=1, AncestorType={x:Type TreeViewItem}}" FallbackValue="1"/>
                                    <Binding Mode="OneWay" RelativeSource="{RelativeSource Mode=FindAncestor, 
                                        AncestorLevel=1, AncestorType={x:Type TreeViewItem}}" FallbackValue="1"/>
                                </MultiBinding>
                            </Rectangle.Width>
                        </Rectangle>

                        <Grid Grid.Column="1" Margin="0,0,0,12">
                            <StackPanel x:Name="ComponentControl" Tag="Component" Orientation="Horizontal" >

                                <!--This can be dragged -->
                                <ContentPresenter  ContentSource="Header" dd:DragDrop.IsDragSource="True"
                                HorizontalAlignment="Center" VerticalAlignment="Top"/>

                                <!-- Horizontal line to the right -->
                                <Rectangle x:Name="horizontalRight" Visibility="Collapsed" Height="1"
                                           HorizontalAlignment="Stretch" VerticalAlignment="Top" Width="40" Margin="0,23,0,0"
                                   Stroke="{DynamicResource MahApps.Brushes.Accent}"
                                 SnapsToDevicePixels="False">                                 
                                </Rectangle>
                            </StackPanel>
                        </Grid>                    

                        <ItemsPresenter x:Name="ItemsHost"  Grid.Column="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>

                    </Grid>
                    <!-- End of Main grid -->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="false">
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsExpanded" Value="true"/>
                                <Condition Property="HasItems" Value="true"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="horizontalRight" Property="Visibility" Value="Visible"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <Trigger Property="HasItems"  Value="false">
                            <Setter TargetName="ItemsHost"   Property="Visibility"  Value="Collapsed"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding ElementName=LeftConnector, Path=Height}" Value="1">
                            <Setter TargetName="LeftConnector"  Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel HorizontalAlignment="Stretch" VerticalAlignment="Stretch" IsItemsHost="True" Orientation="Vertical" Width="Auto"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="TreeViewItem" x:Key="ContainerStyle">
        <Setter Property="IsExpanded" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TreeViewItem">
                    <Grid HorizontalAlignment="Stretch">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>                           
                        </Grid.ColumnDefinitions>

                        <!-- Horizontal line to the left -->
                        <Rectangle x:Name="LeftConnector" Grid.Column="0" HorizontalAlignment="Stretch" VerticalAlignment="Top" Width="40" Margin="0,23,0,0"
                            Stroke="{DynamicResource MahApps.Brushes.Accent}" SnapsToDevicePixels="False" Visibility="Collapsed">
                            <Rectangle.Height>
                                <Binding  Mode="OneWay"  Converter="{StaticResource horzLineConv}" ConverterParameter="left"  RelativeSource="{RelativeSource
                                     AncestorLevel=1,  AncestorType={x:Type TreeViewItem}}"/>
                            </Rectangle.Height>
                        </Rectangle>

                        <!-- Vertical line below node -->
                        <Rectangle x:Name="VerticalBottomLine"  Grid.Column="0"  Height="Auto"   Stroke="{DynamicResource MahApps.Brushes.Accent}" HorizontalAlignment="Left" 
                                   VerticalAlignment="Stretch" SnapsToDevicePixels="False" Margin="0,23,0,-23">
                            <Rectangle.Width>
                                <MultiBinding Converter="{StaticResource vertLineConv}">
                                    <Binding Path="DataContext.ComponentCollection.Count" Mode="OneWay" RelativeSource="{RelativeSource Mode=FindAncestor, 
                                        AncestorLevel=2, AncestorType={x:Type TreeViewItem}}" FallbackValue="1"/>
                                    <Binding Mode="OneWay" Path="DataContext.ProcessOrder" RelativeSource="{RelativeSource Mode=FindAncestor, 
                                        AncestorLevel=1, AncestorType={x:Type TreeViewItem}}" FallbackValue="1"/>
                                    <Binding Mode="OneWay" RelativeSource="{RelativeSource Mode=FindAncestor, 
                                        AncestorLevel=1, AncestorType={x:Type TreeViewItem}}" FallbackValue="1"/>
                                </MultiBinding>
                            </Rectangle.Width>
                        </Rectangle>


                        <Border x:Name="ComponentControl" Tag="Component" dd:DragDrop.IsDragSource="True" Grid.Column="1" BorderThickness="2" BorderBrush="{DynamicResource MahApps.Brushes.Accent}" 
                                Margin="0,4,0,8" MinWidth="220" Background="{DynamicResource MahApps.Brushes.Control.Background}">
                            <DockPanel>
                                <ContentPresenter DockPanel.Dock="Top" ContentSource="Header" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  Margin="0,2,0,2"/>
                                <StackPanel DockPanel.Dock="Top" HorizontalAlignment="Stretch" Orientation="Vertical">
                                    <Border x:Name="Seperator" BorderThickness="1" BorderBrush="{DynamicResource MahApps.Brushes.Accent3}"
                                            DockPanel.Dock="Top" Margin="0,0,0,2" Visibility="Collapsed"/>
                                    <Grid x:Name="ContentHost" DockPanel.Dock="Top" Margin="0" Visibility="Collapsed">
                                        <Border x:Name="EmptyMessageBorder"  BorderThickness="1" BorderBrush="{DynamicResource MahApps.Brushes.Accent}" 
                                                        CornerRadius="2" Margin="8" HorizontalAlignment="Stretch" Visibility="Collapsed"
                                                        VerticalAlignment="Center" Background="{DynamicResource MahApps.Brushes.Control.Background}">
                                            <Label x:Name="EmptyMessage" Content="Drop Components here" HorizontalAlignment="Center"
                                                        FontSize="12" VerticalAlignment="Center" Visibility="Collapsed"/>
                                        </Border>

                                        <ItemsPresenter x:Name="ItemsHost" MinWidth="200" Margin="8" Visibility="Visible"                                               
                                                HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                                    </Grid>
                                </StackPanel>
                            </DockPanel>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded"  Value="True">
                            <Setter TargetName="ContentHost"   Property="Visibility"  Value="Visible"/>
                            <Setter TargetName="Seperator"   Property="Visibility"  Value="Visible"/>
                        </Trigger>
                        <Trigger Property="HasItems"  Value="True">
                            <Setter TargetName="EmptyMessageBorder"   Property="Visibility"  Value="Collapsed"/>
                            <Setter TargetName="EmptyMessage"   Property="Visibility"  Value="Collapsed"/>
                            <Setter TargetName="ItemsHost"   Property="Visibility"  Value="Visible"/>
                        </Trigger>
                        <Trigger Property="HasItems"  Value="False">
                            <Setter TargetName="EmptyMessageBorder"   Property="Visibility"  Value="Visible"/>
                            <Setter TargetName="EmptyMessage"   Property="Visibility"  Value="Visible"/>
                            <Setter TargetName="ItemsHost"   Property="Visibility"  Value="Collapsed"/>
                            <Setter Property="IsExpanded" Value="True"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding ElementName=LeftConnector, Path=Height}" Value="1">
                            <Setter TargetName="LeftConnector"  Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsValid}" Value="false">
                            <Setter TargetName="ComponentControl" Property="BorderBrush" Value="Red"></Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsEnabled}" Value="false">
                            <Setter TargetName="ComponentControl" Property="BorderBrush" Value="Gray"></Setter>
                        </DataTrigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="ComponentControl" Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.AccentBase}"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel  HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="Transparent"
                                 IsItemsHost="True"  Orientation="Vertical" Tag="Contained"/>                  
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>