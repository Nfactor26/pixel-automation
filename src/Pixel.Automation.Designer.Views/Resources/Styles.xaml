<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"                 
                    xmlns:dd="clr-namespace:GongSolutions.Wpf.DragDrop;assembly=GongSolutions.Wpf.DragDrop"
                    xmlns:converters="clr-namespace:Pixel.Automation.Designer.Views.Converters"                   
                    xmlns:Metro="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                    xmlns:cal="http://www.caliburnproject.org" 
                    xmlns:local="clr-namespace:Pixel.Automation.Designer.Views"
                    xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
                    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks">


    <local:ComponentDataTemplateSelector x:Key="ComponentTemplateSelector"/>
    <local:ComponentStyleSelector x:Key="ComponentStyleSelector"/>
    <converters:HorizontalLineConverter x:Key="horzLineConv"/>
    <converters:VerticalLineConverter x:Key="vertLineConv"/>
    <iconPacks:PackIconMaterial x:Key="IconDotsVertical" Kind="DotsVertical" x:Shared="false" />
    <iconPacks:PackIconModern x:Key="IconPageEdit" Kind="PageEdit" x:Shared="false" />
    <iconPacks:PackIconOcticons x:Key="IconInfo" Kind="Info"  x:Shared="false" />
    
    <Style  x:Key="LinkButton"  TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <TextBlock TextDecorations="Underline">
                        <ContentPresenter/>
                    </TextBlock>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Accent}" />
        <Setter Property="Margin" Value="10,5,0,5" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Foreground" Value="Red" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="EditControlButtonStyle" TargetType="Button" BasedOn="{StaticResource MahApps.Styles.Button.Circle}">
        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Control.Background}"></Setter>
        <Setter Property="Width" Value="20"></Setter>
        <Setter Property="Height" Value="20"></Setter>
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Accent2}"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="Gray"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <!--<Setter Property="LayoutTransform">
                    <Setter.Value>
                        <ScaleTransform ScaleX="1.2" ScaleY="1.2"/>
                    </Setter.Value>
                </Setter>-->
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Accent}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="SquaredButtonStyle" TargetType="Button" BasedOn="{StaticResource MahApps.Styles.Button.Square}">
        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Control.Background}"></Setter>
        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Accent2}"/>
        <Setter Property="MinWidth" Value="28"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="BorderBrush" Value="#FFCCCCCC"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="Gray"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">            
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Accent}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ShowDialogButtonStyle" TargetType="Button" BasedOn="{StaticResource SquaredButtonStyle}">
        <Setter Property="Content" Value="{StaticResource IconDotsVertical}"/>
    </Style>
    <Style x:Key="EditScriptButtonStyle" TargetType="Button" BasedOn="{StaticResource SquaredButtonStyle}">
        <Setter Property="Content" Value="{StaticResource IconPageEdit}"/>
    </Style>

    <Style x:Key="InfoButtonStyle" TargetType="Button" BasedOn="{StaticResource MahApps.Styles.Button.Circle}">
        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Control.Background}"></Setter>
        <Setter Property="Width" Value="24"></Setter>
        <Setter Property="Height" Value="24"></Setter>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Content" Value="{StaticResource IconInfo}"/>
    </Style>

    <Style TargetType="GroupBox" x:Key="GroupBoxHeaderWithDelete">
        <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Accent}"/>
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <StackPanel Background="{Binding TemplatedParent}"  DataContext="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type GroupBox}}}"  Orientation="Horizontal">
                        <Label  Content="{Binding Name}"  HorizontalAlignment="Left" VerticalAlignment="Center"></Label>

                        <Button Margin="0,0,2,0" HorizontalAlignment="Right" x:Name="btnEditControl" 
                            Height="20"
                            cal:Message.Attach="[Event Click] = [Action EditControl()]"                   
                            Style="{StaticResource EditControlButtonStyle}"
                            Content="{iconPacks:FontAwesome EditSolid}"/>

                        <Button x:Name="btnDeleteComponent"  Width="20" HorizontalAlignment="Right"  Height="20" Margin="0,0,0,0"
                                cal:Message.Attach="[Event Click] = [Action DeleteComponent($dataContext)]">
                            <Button.Template>
                                <ControlTemplate>
                                    <Rectangle Width="10"  Height="10"  Fill="{DynamicResource MahApps.Brushes.Button.Flat.Foreground}">
                                        <Rectangle.OpacityMask>
                                            <VisualBrush Stretch="Fill"
                                         Visual="{DynamicResource appbar_close}" />
                                        </Rectangle.OpacityMask>
                                    </Rectangle>
                                </ControlTemplate>
                            </Button.Template>

                        </Button>
                    </StackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="GroupBox" x:Key="GroupBoxHeader">
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <DockPanel  DataContext="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type GroupBox}}}" LastChildFill="True">
                        <Label  Content="{Binding Name}"  Width="Auto" DockPanel.Dock="Left" HorizontalAlignment="Left" VerticalAlignment="Center"></Label>
                        <!--<Button x:Name="btnDeleteComponent" DockPanel.Dock="Right" Width="20"  Height="20" Margin="5,0,0,0" Style="{DynamicResource MahApps.Styles.Button.Circle}"
                                cal:Message.Attach="[Event Click] = [Action DeleteComponent($dataContext)]">
                            <Rectangle Width="10"  Height="10"  Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
                                <Rectangle.OpacityMask>
                                    <VisualBrush Stretch="Fill"
                                         Visual="{DynamicResource appbar_city}" />
                                </Rectangle.OpacityMask>
                            </Rectangle>
                        </Button>-->
                    </DockPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush x:Key="GlyphBrush" Color="#444" />

    <!--Data templates-->
    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}"
                          Color="{DynamicResource MahApps.Colors.Accent2}" />
    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}"
                          Color="Black" />
    <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}"
                          Color="Transparent" />
    <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}"
                         Color="{DynamicResource MahApps.Colors.Accent2}"/>  
 
    <Style x:Key="TextBlockStyle" TargetType="TextBlock">
        <Setter Property="FontWeight" Value="Bold"></Setter>
        <Setter Property="FontStyle" Value="Normal"></Setter>
        <Setter Property="FontSize" Value="20"></Setter>
        <Setter Property="Margin" Value="10,0,0,0"></Setter>
        <Setter Property="HorizontalAlignment" Value="Left"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
    </Style>

    <Thickness x:Key="ControlMargin">10 10 10 10</Thickness>

    <Style  x:Key="BreadCrumbLink"  TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <TextBlock TextDecorations="Underline">
                            <ContentPresenter/>
                    </TextBlock>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Accent}" />
    </Style>

    <Style TargetType="ItemsControl" x:Key="BreadCrumbStyle">
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <Button x:Name="ZoomOutToEntity" Style="{StaticResource BreadCrumbLink}" 
                            Margin="5"
                            cal:Message.Attach="[Event Click] = [Action ZoomOutToEntity($dataContext)]"
                            Content="{Binding Name}"/>
                        <iconPacks:PackIconMaterial Kind="ChevronRight" Margin="0,4,0,0" HorizontalAlignment="Center"
                                                    VerticalAlignment="Center" Height="10"
                                                    Foreground="{DynamicResource MahApps.Brushes.Accent4}" />
                    </StackPanel>
                   
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel HorizontalAlignment="Stretch" VerticalAlignment="Top" Orientation="Horizontal"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Without redefining the error template , a red border appears around the content control -->
    <Style TargetType="{x:Type ContentControl}" x:Key="ContentControlWithoutErrorTemplate">
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <AdornedElementPlaceholder></AdornedElementPlaceholder>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="StackPanelWithoutErrorTemplateStyle" TargetType="{x:Type StackPanel}">
        <Style.Setters>
            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <AdornedElementPlaceholder></AdornedElementPlaceholder>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>
    
    <Style x:Key="ModelErrorStyle" TargetType="{x:Type ItemsControl}">
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock FontSize="14" Text="{Binding ErrorContent}" Margin="2"></TextBlock>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel IsItemsHost="True" Orientation="Vertical"></StackPanel>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>       
        <!--Without redefining the error template , a red border appears around the items control -->
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <AdornedElementPlaceholder></AdornedElementPlaceholder>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Expander}" BasedOn="{StaticResource MahApps.Styles.Expander}">
        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Window.Background}"/>
        <Setter Property="controls:HeaderedControlHelper.HeaderBackground" Value="{DynamicResource MahApps.Brushes.Window.Background}"/>
    </Style>


</ResourceDictionary>