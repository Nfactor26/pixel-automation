<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"                   
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Pixel.Automation.Designer.Views"
                    xmlns:dd="clr-namespace:GongSolutions.Wpf.DragDrop;assembly=GongSolutions.Wpf.DragDrop"
                    xmlns:converters="clr-namespace:Pixel.Automation.Designer.Views.Converters"                   
                    xmlns:Metro="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                    xmlns:cal="http://www.caliburnproject.org"                   
                    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
                    xmlns:prefabs="clr-namespace:Pixel.Automation.Editor.Controls.Prefabs;assembly=Pixel.Automation.Editor.Controls">
    
    <!--<iconPacks:PackIconMaterial x:Key="WindowsIcon" Kind="Windows" Foreground="{DynamicResource MahApps.Brushes.Accent}" 
                                           Background="{DynamicResource MahApps.Brushes.Control.Background}"/>
    <iconPacks:PackIconModern x:Key="JavaIcon" Kind="LanguageJava" Foreground="{DynamicResource MahApps.Brushes.Accent}" 
                                           Background="{DynamicResource MahApps.Brushes.Control.Background}"/>
    <iconPacks:PackIconFontAwesome x:Key="FireFoxIcon"  Kind="FirefoxBrands" Foreground="{DynamicResource MahApps.Brushes.Accent}" 
                                           Background="{DynamicResource MahApps.Brushes.Control.Background}"/>
    <iconPacks:PackIconFontAwesome x:Key="ChromeIcon"  Kind="ChromeBrands" Foreground="{DynamicResource MahApps.Brushes.Accent}" 
                                           Background="{DynamicResource MahApps.Brushes.Control.Background}"/>
    <iconPacks:PackIconFontAwesome x:Key="EdgeIcon"  Kind="EdgeBrands" Foreground="{DynamicResource MahApps.Brushes.Accent}" 
                                           Background="{DynamicResource MahApps.Brushes.Control.Background}"/>-->  
    
    <HierarchicalDataTemplate x:Key="Entity" ItemsSource="{Binding ComponentCollection}">
        <Border x:Name="brdContainer"  BorderThickness="2" BorderBrush="{DynamicResource MahApps.Brushes.Accent}"
                HorizontalAlignment="Stretch" Margin="0,4,0,4" MinWidth="224" dd:DragDrop.IsDragSource="True"
                Background="{DynamicResource MahApps.Brushes.Control.Background}">
            <DockPanel Grid.Row="0" LastChildFill="True" Margin="4" Width="Auto" HorizontalAlignment="Stretch"
                      IsHitTestVisible="True">
                <Label DockPanel.Dock="Left"  Content="{Binding Model.Name}" MaxWidth="160" 
                       HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
                <StackPanel x:Name="pnlActions" DockPanel.Dock="Right" Visibility="Collapsed"
                            HorizontalAlignment="Right" Orientation="Horizontal">
                    <Button x:Name="btnDrillIn" Margin="0,0,2,0" HorizontalAlignment="Right" 
                                            Height="20" Width="20" ToolTip="Drill In"
                                            cal:Message.Attach="[Event Click] = [Action ZoomInToEntity($dataContext)]"                   
                                            Style="{DynamicResource EditControlButtonStyle}"
                                            Content="{iconPacks:MaterialLight ArrangeBringForward}"/>
                    <Button x:Name="btnDeleteComponent" Width="20"  Height="20" HorizontalAlignment="Right"  Margin="0,0,0,0"
                      cal:Message.Attach="[Event Click] = [Action DeleteComponent($dataContext)]"
                      Style="{DynamicResource EditControlButtonStyle}" ToolTip="Delete"  Content="{iconPacks:Material CloseCircleOutline}"/>
                </StackPanel>

            </DockPanel>
        </Border>
        <HierarchicalDataTemplate.Triggers>
            <Trigger Property="IsMouseOver"  Value="true">
                <Setter TargetName="pnlActions"  Property="Visibility" Value="Visible"/>
            </Trigger>
            <DataTrigger Binding="{Binding Model.IsValid}" Value="false">
                <Setter TargetName="brdContainer" Property="BorderBrush" Value="Red"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Model.IsEnabled}" Value="false">
                <Setter TargetName="brdContainer" Property="BorderBrush" Value="Gray"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding  RelativeSource={RelativeSource
                                Mode=FindAncestor,
                                AncestorType={x:Type TreeViewItem}},
                                Path=IsSelected}" Value="True">
                <Setter TargetName="brdContainer" Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.AccentBase}"/>
            </DataTrigger>
        </HierarchicalDataTemplate.Triggers>
    </HierarchicalDataTemplate>

    <HierarchicalDataTemplate x:Key="EntityNoDelete" ItemsSource="{Binding ComponentCollection}">
        <Border x:Name="brdContainer"  BorderThickness="2" BorderBrush="{DynamicResource MahApps.Brushes.Accent}"
                HorizontalAlignment="Stretch" Margin="0,4,0,4" MinWidth="224" dd:DragDrop.IsDragSource="True"
                Background="{DynamicResource MahApps.Brushes.Control.Background}">
            <DockPanel LastChildFill="True" Margin="4" Width="Auto" HorizontalAlignment="Stretch"
                      IsHitTestVisible="True">
                <Label DockPanel.Dock="Left"  Content="{Binding Model.Name}" MaxWidth="160" 
                       HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
                <StackPanel x:Name="pnlActions" DockPanel.Dock="Right" Visibility="Collapsed"
                            HorizontalAlignment="Right" Orientation="Horizontal">
                    <Button x:Name="btnDrillIn" Margin="0,0,2,0" HorizontalAlignment="Right" 
                                            Height="20" Width="20" ToolTip="Drill In"
                                            cal:Message.Attach="[Event Click] = [Action ZoomInToEntity($dataContext)]"                   
                                            Style="{DynamicResource EditControlButtonStyle}"
                                            Content="{iconPacks:MaterialLight ArrangeBringForward}"/>                   
                </StackPanel>
            </DockPanel>
        </Border>
        <HierarchicalDataTemplate.Triggers>
            <Trigger Property="IsMouseOver"  Value="true">
                <Setter TargetName="pnlActions"  Property="Visibility" Value="Visible"/>
            </Trigger>
            <DataTrigger Binding="{Binding Model.IsValid}" Value="false">
                <Setter TargetName="brdContainer" Property="BorderBrush" Value="Red"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Model.IsEnabled}" Value="false">
                <Setter TargetName="brdContainer" Property="BorderBrush" Value="Gray"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource
                                Mode=FindAncestor,
                                AncestorType={x:Type TreeViewItem}},
                                Path=IsSelected}" Value="True">
                <Setter TargetName="brdContainer" Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.AccentBase}"/>
            </DataTrigger>
        </HierarchicalDataTemplate.Triggers>
    </HierarchicalDataTemplate>

    <HierarchicalDataTemplate x:Key="EntityProcessor" ItemsSource="{Binding ComponentCollection}">
        <Border x:Name="brdContainer"  BorderThickness="2" BorderBrush="{DynamicResource MahApps.Brushes.Accent}"
                HorizontalAlignment="Stretch" Margin="0,4,0,4" MinWidth="224" dd:DragDrop.IsDragSource="True"
                Background="{DynamicResource MahApps.Brushes.Control.Background}">
            <DockPanel Grid.Row="0" LastChildFill="True" Margin="4" Width="Auto" HorizontalAlignment="Stretch"
                       IsHitTestVisible="True">
                <Label DockPanel.Dock="Left"  Content="{Binding Model.Name}"  HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
                <StackPanel x:Name="pnlActions" DockPanel.Dock="Right" Visibility="Collapsed"
                            HorizontalAlignment="Right" Orientation="Horizontal">
                    <Button x:Name="RunProcessor" Width="20"  Height="20" HorizontalAlignment="Right"  Margin="0,0,0,0"
                      cal:Message.Attach="[Event Click] = [Action RunComponent($dataContext)]" 
                      Style="{DynamicResource EditControlButtonStyle}" ToolTip="Run" 
                            Content="{iconPacks:FontAwesome PlayCircleSolid}"/>
                    <Button x:Name="btnDrillIn" Margin="0,0,2,0" HorizontalAlignment="Right" 
                            Height="20" Width="20" ToolTip="Drill In"
                            cal:Message.Attach="[Event Click] = [Action ZoomInToEntity($dataContext)]"                   
                            Style="{DynamicResource EditControlButtonStyle}"
                            Content="{iconPacks:MaterialLight ArrangeBringForward}"/>                  
                    <Button x:Name="btnDeleteComponent" Width="20"  Height="20" HorizontalAlignment="Right"  Margin="0,0,0,0"
                      cal:Message.Attach="[Event Click] = [Action DeleteComponent($dataContext)]"
                      Style="{DynamicResource EditControlButtonStyle}" ToolTip="Delete"  Content="{iconPacks:Material CloseCircleOutline}"/>
                </StackPanel>

            </DockPanel>
        </Border>
        <HierarchicalDataTemplate.Triggers>
            <Trigger Property="IsMouseOver"  Value="true">
                <Setter TargetName="pnlActions"  Property="Visibility" Value="Visible"/>
            </Trigger>
            <DataTrigger Binding="{Binding Model.IsValid}" Value="false">
                <Setter TargetName="brdContainer" Property="BorderBrush" Value="Red"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Model.IsEnabled}" Value="false">
                <Setter TargetName="brdContainer" Property="BorderBrush" Value="Gray"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource
                                Mode=FindAncestor,
                                AncestorType={x:Type TreeViewItem}},
                                Path=IsSelected}" Value="True">
                <Setter TargetName="brdContainer" Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.AccentBase}"/>
            </DataTrigger>
        </HierarchicalDataTemplate.Triggers>
    </HierarchicalDataTemplate>

    <DataTemplate x:Key="ActorComponent">
        <Border x:Name="brdContainer"  BorderThickness="2" BorderBrush="{DynamicResource MahApps.Brushes.Accent}"
                HorizontalAlignment="Stretch" Margin="0,4,0,4" MinWidth="224" dd:DragDrop.IsDragSource="True"
                Background="{DynamicResource MahApps.Brushes.Control.Background}">
            <DockPanel Grid.Row="0" LastChildFill="True" Margin="4" Width="Auto" HorizontalAlignment="Stretch"
                      IsHitTestVisible="True">

                <Label DockPanel.Dock="Left"  Content="{Binding Model.Name}"  HorizontalAlignment="Stretch" VerticalAlignment="Center"/>

                <StackPanel x:Name="pnlActions" DockPanel.Dock="Right" Visibility="Collapsed"
                            HorizontalAlignment="Right" Orientation="Horizontal">
                    <Button x:Name="Run" Margin="0,0,2,0" HorizontalAlignment="Right" 
                            Height="20" Width="20" ToolTip="Run"
                            cal:Message.Attach="[Action RunComponent($dataContext)]"                   
                            Style="{DynamicResource EditControlButtonStyle}"
                            Content="{iconPacks:MaterialLight Play}"/>
                    <Button x:Name="btnDeleteComponent" Width="20"  Height="20" HorizontalAlignment="Right"  Margin="0,0,0,0"
                      cal:Message.Attach="[Event Click] = [Action DeleteComponent($dataContext)]"
                      Style="{DynamicResource EditControlButtonStyle}" ToolTip="Delete"
                            Content="{iconPacks:Material CloseCircleOutline}"/>
                </StackPanel>
            </DockPanel>
        </Border>
        <DataTemplate.Triggers>
            <Trigger Property="IsMouseOver"  Value="true">
                <Setter TargetName="pnlActions"  Property="Visibility" Value="Visible"/>
            </Trigger>
            <DataTrigger Binding="{Binding Model.IsExecuting}" Value="true">
                <Setter TargetName="brdContainer" Property="BorderBrush" Value="Green"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Model.IsFaulted}" Value="true">
                <Setter TargetName="brdContainer" Property="BorderBrush" Value="Red"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Model.IsValid}" Value="false">
                <Setter TargetName="brdContainer" Property="BorderBrush" Value="Red"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Model.IsEnabled}" Value="false">
                <Setter TargetName="brdContainer" Property="BorderBrush" Value="Gray"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource
                                Mode=FindAncestor,
                                AncestorType={x:Type TreeViewItem}},
                                Path=IsSelected}" Value="True">
                <Setter TargetName="brdContainer" Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.AccentBase}"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="ServiceComponent" >
        <Border x:Name="brdContainer"  BorderThickness="2" BorderBrush="{DynamicResource MahApps.Brushes.Accent}"
                HorizontalAlignment="Stretch" Margin="0,4,0,4" MinWidth="224" dd:DragDrop.IsDragSource="True"
                Background="{DynamicResource MahApps.Brushes.Control.Background}">
            <DockPanel Grid.Row="0" LastChildFill="True" Margin="4" Width="Auto" HorizontalAlignment="Stretch"
                       IsHitTestVisible="True">
                <Label DockPanel.Dock="Left"  Content="{Binding Model.Name}"  HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
                <StackPanel x:Name="pnlActions" DockPanel.Dock="Right" Visibility="Collapsed"
                            HorizontalAlignment="Right" Orientation="Horizontal">
                    <Button x:Name="btnDeleteComponent" Width="20"  Height="20" HorizontalAlignment="Right"  Margin="0,0,0,0"
                      cal:Message.Attach="[Event Click] = [Action DeleteComponent($dataContext)]"
                      Style="{DynamicResource EditControlButtonStyle}" ToolTip="Delete"
                            Content="{iconPacks:Material CloseCircleOutline}"/>
                </StackPanel>
            </DockPanel>
        </Border>
        <DataTemplate.Triggers>
            <Trigger Property="IsMouseOver"  Value="true">
                <Setter TargetName="pnlActions"  Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsMouseOver"  Value="true">
                <Setter TargetName="btnDeleteComponent"  Property="Visibility" Value="Visible"/>
            </Trigger>
            <DataTrigger Binding="{Binding Model.IsValid}" Value="false">
                <Setter TargetName="brdContainer" Property="BorderBrush" Value="Red"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Model.IsEnabled}" Value="false">
                <Setter TargetName="brdContainer" Property="BorderBrush" Value="Gray"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource
                                Mode=FindAncestor,
                                AncestorType={x:Type TreeViewItem}},
                                Path=IsSelected}" Value="True">
                <Setter TargetName="brdContainer" Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.AccentBase}"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="PrefabTemplate">
        <Border x:Name="brdContainer"  BorderThickness="2" BorderBrush="{DynamicResource MahApps.Brushes.Accent}"
                HorizontalAlignment="Stretch" Margin="0,4,0,4" MinWidth="224" Background="{DynamicResource MahApps.Brushes.Control.Background}">
            <DockPanel LastChildFill="True" Margin="4" Width="Auto" HorizontalAlignment="Stretch"
                       Background="White" IsHitTestVisible="True">
                <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center" Margin="2"
                                            ToolTip="Control">
                    <iconPacks:PackIconSimpleIcons Kind="Buffer" Foreground="{DynamicResource MahApps.Brushes.Accent}" Background="{DynamicResource MahApps.Brushes.Control.Background}"/>
                </StackPanel>
                <Label DockPanel.Dock="Left"  Content="{Binding Model.Name}"  HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
                <StackPanel x:Name="pnlActions" DockPanel.Dock="Right" Visibility="Collapsed"
                            HorizontalAlignment="Right" Orientation="Horizontal">
                    <prefabs:InputMappingButton ScriptFile="{Binding Model.InputMappingScriptFile, Mode=OneWay}"
                                                AssignFrom="{Binding Model.DataModelType, Mode=OneWay}"
                                                OwnerComponent="{Binding Model}"
                                                EntityManager="{Binding Model.EntityManager, Mode=OneWay}"
                                                AssignTo="{Binding Model.PrefabDataModelType, Mode=OneWay}"></prefabs:InputMappingButton>
                    <prefabs:OutputMappingButton ScriptFile="{Binding Model.OutputMappingScriptFile, Mode=OneWay}" 
                                                AssignFrom="{Binding Model.PrefabDataModelType, Mode=OneWay}" 
                                                OwnerComponent="{Binding Model}"
                                                EntityManager="{Binding Model.EntityManager, Mode=OneWay}"
                                                AssignTo="{Binding Model.DataModelType, Mode=OneWay}"></prefabs:OutputMappingButton>
                    <Button x:Name="btnDeleteComponent" Width="20"  Height="20" HorizontalAlignment="Right"  Margin="0,0,0,0"
                      cal:Message.Attach="[Event Click] = [Action DeleteComponent($dataContext)]"
                      Style="{DynamicResource EditControlButtonStyle}" ToolTip="Delete"
                            Content="{iconPacks:Material CloseCircleOutline}"/>
                </StackPanel>
            </DockPanel>
        </Border>
        <DataTemplate.Triggers>
            <Trigger Property="IsMouseOver"  Value="true">
                <Setter TargetName="pnlActions"  Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsMouseOver"  Value="true">
                <Setter TargetName="btnDeleteComponent"  Property="Visibility" Value="Visible"/>
            </Trigger>
            <DataTrigger Binding="{Binding Model.IsValid}" Value="false">
                <Setter TargetName="brdContainer" Property="BorderBrush" Value="Red"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Model.IsEnabled}" Value="false">
                <Setter TargetName="brdContainer" Property="BorderBrush" Value="Gray"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource
                                Mode=FindAncestor,
                                AncestorType={x:Type TreeViewItem}},
                                Path=IsSelected}" Value="True">
                <Setter TargetName="brdContainer" Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.AccentBase}"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <HierarchicalDataTemplate x:Key="ParallelProcessorTemplate"  ItemsSource="{Binding ComponentCollection}">
        <DockPanel LastChildFill="True" Width="Auto" HorizontalAlignment="Stretch" Margin="4" 
                   Background="{DynamicResource MahApps.Brushes.Control.Background}" IsHitTestVisible="True">
            <Label DockPanel.Dock="Left"  Content="{Binding Model.Name}"  HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
            <StackPanel x:Name="pnlActions" DockPanel.Dock="Right" Visibility="Collapsed" HorizontalAlignment="Right" Orientation="Horizontal" Margin="0,0,4,0">
                <Button x:Name="RunProcessor" Width="20"  Height="20" HorizontalAlignment="Right"  Margin="0,0,2,0"
                                                    cal:Message.Attach="[Event Click] = [Action RunComponent($dataContext)]" 
                                                    Style="{DynamicResource EditControlButtonStyle}" ToolTip="Run" 
                                                    Content="{iconPacks:FontAwesome PlayCircleSolid}"/>
                <Button x:Name="AddParallelBlock" Margin="0,0,2,0" HorizontalAlignment="Right" 
                                            Height="20" Width="20" ToolTip="Add parallel block"                                         
                                            cal:Message.Attach="[Event Click] = [Action AddParallelBlock()]"                   
                                            Style="{DynamicResource EditControlButtonStyle}"
                                            Content="{iconPacks:MaterialLight PlusCircle}"/>
                <Button x:Name="btnDrillIn" Margin="0,0,2,0" HorizontalAlignment="Right" 
                                            Height="20" Width="20" ToolTip="Drill In"
                                            cal:Message.Attach="[Event Click] = [Action ZoomInToEntity($dataContext)]"                   
                                            Style="{DynamicResource EditControlButtonStyle}"
                                            Content="{iconPacks:MaterialLight ArrangeBringForward}"/>
                <Button x:Name="btnDeleteComponent" Width="20"  Height="20" HorizontalAlignment="Right"  Margin="0,0,0,0"
                                            cal:Message.Attach="[Event Click] = [Action DeleteComponent($dataContext)]"
                                            ToolTip="Delete" Style="{DynamicResource EditControlButtonStyle}"
                                            Content="{iconPacks:Material CloseCircleOutline}"/>
            </StackPanel>
        </DockPanel>
        <DataTemplate.Triggers>
            <Trigger Property="IsMouseOver"  Value="true">
                <Setter TargetName="pnlActions"  Property="Visibility" Value="Visible"/>
            </Trigger>           
        </DataTemplate.Triggers>
    </HierarchicalDataTemplate>

    <HierarchicalDataTemplate x:Key="SequentialProcessorTemplate"  ItemsSource="{Binding ComponentCollection}">
        <Border x:Name="brdContainer"  BorderThickness="2" BorderBrush="{DynamicResource MahApps.Brushes.Accent}"
                HorizontalAlignment="Stretch" Margin="0,4,0,4" MinWidth="220" dd:DragDrop.IsDragSource="True"
                Background="{DynamicResource MahApps.Brushes.Control.Background}">
            <DockPanel LastChildFill="True" Margin="4" Width="Auto" HorizontalAlignment="Stretch"
                      IsHitTestVisible="True">
                <Label DockPanel.Dock="Left"  Content="{Binding Model.Name}"  HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
                <StackPanel x:Name="pnlActions" DockPanel.Dock="Right" Visibility="Collapsed" HorizontalAlignment="Right" Orientation="Horizontal" Margin="0,0,4,0">
                    <Button x:Name="RunProcessor" Width="20"  Height="20" HorizontalAlignment="Right"  Margin="0,0,2,0"
                                                    cal:Message.Attach="[Event Click] = [Action RunComponent($dataContext)]" 
                                                    Style="{DynamicResource EditControlButtonStyle}" ToolTip="Run" 
                                                    Content="{iconPacks:FontAwesome PlayCircleSolid}"/>
                    <Button x:Name="btnDrillIn" Margin="0,0,2,0" HorizontalAlignment="Right" 
                                            Height="20" Width="20" ToolTip="Drill In"
                                            cal:Message.Attach="[Event Click] = [Action ZoomInToEntity($dataContext)]"                   
                                            Style="{DynamicResource EditControlButtonStyle}"
                                            Content="{iconPacks:MaterialLight ArrangeBringForward}"/>
                    <Button x:Name="btnDeleteComponent" Width="20"  Height="20" HorizontalAlignment="Right"  Margin="0,0,0,0"
                                            cal:Message.Attach="[Event Click] = [Action DeleteComponent($dataContext)]"
                                            ToolTip="Delete" Style="{DynamicResource EditControlButtonStyle}"
                                            Content="{iconPacks:Material CloseCircleOutline}"/>
                </StackPanel>
            </DockPanel>
        </Border>
        <DataTemplate.Triggers>
            <Trigger Property="IsMouseOver"  Value="true">
                <Setter TargetName="pnlActions"  Property="Visibility" Value="Visible"/>
            </Trigger>
        </DataTemplate.Triggers>
    </HierarchicalDataTemplate>

    <HierarchicalDataTemplate x:Key="SequenceTemplate"  ItemsSource="{Binding ComponentCollection}">
        <DockPanel LastChildFill="True" Width="Auto" HorizontalAlignment="Stretch" MinWidth="220" Margin="0,4,0,4" 
                   Background="{DynamicResource MahApps.Brushes.Control.Background}" IsHitTestVisible="True">
            <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center" Margin="4" ToolTip="Control" DockPanel.Dock="Left">
                <iconPacks:PackIconMaterial Kind="ViewSequential" Foreground="{DynamicResource MahApps.Brushes.Accent}" 
                                                                  Background="{DynamicResource MahApps.Brushes.Control.Background}"/>
            </StackPanel>
            <Label DockPanel.Dock="Left"  Content="{Binding Model.Name}"  HorizontalAlignment="Left" VerticalAlignment="Center"></Label>
            <StackPanel x:Name="pnlActions" DockPanel.Dock="Right" Visibility="Collapsed" Margin="0,0,4,0"
                                                HorizontalAlignment="Right" Orientation="Horizontal">
                <Button x:Name="btnDrillIn" Margin="0,0,2,0" HorizontalAlignment="Right" 
                                            Height="20" Width="20" ToolTip="Drill In"
                                            cal:Message.Attach="[Event Click] = [Action ZoomInToEntity($dataContext)]"                   
                                            Style="{DynamicResource EditControlButtonStyle}"
                                            Content="{iconPacks:MaterialLight ArrangeBringForward}"/>
                <Button x:Name="btnDeleteComponent" Width="20"  Height="20" HorizontalAlignment="Right"
                                          cal:Message.Attach="[Event Click] = [Action DeleteComponent($dataContext)]"
                                          ToolTip="Delete" Style="{DynamicResource EditControlButtonStyle}"
                                          Content="{iconPacks:Material CloseCircleOutline}"/>
            </StackPanel>
        </DockPanel>
        <DataTemplate.Triggers>
            <Trigger Property="IsMouseOver"  Value="true">
                <Setter TargetName="pnlActions"  Property="Visibility" Value="Visible"/>
            </Trigger>
        </DataTemplate.Triggers>
    </HierarchicalDataTemplate>

    <HierarchicalDataTemplate x:Key="ApplicationEntityTemplate"  ItemsSource="{Binding ComponentCollection}">
         <DockPanel LastChildFill="True" Width="Auto" HorizontalAlignment="Stretch" MinWidth="220" Margin="0,4,0,4" 
                   Background="{DynamicResource MahApps.Brushes.Control.Background}" IsHitTestVisible="True">
            <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center" Margin="4" ToolTip="Control" DockPanel.Dock="Left">
                <!--This causes memory leak even without triggers. Leaving here for future someone who might be able to explain the reason
                    and help get the dynamic icons back again.-->
                <!--<ContentPresenter x:Name="IconPlaceHolder" Content="{StaticResource FireFoxIcon}"/>-->
                <iconPacks:PackIconMaterial Kind="Application"  Foreground="{DynamicResource MahApps.Brushes.Accent}" 
                                                                  Background="{DynamicResource MahApps.Brushes.Control.Background}"/>
            </StackPanel>
            <Label DockPanel.Dock="Left"  Content="{Binding Model.Name}"  HorizontalAlignment="Left" VerticalAlignment="Center"></Label>
            <StackPanel x:Name="pnlActions" DockPanel.Dock="Right" Visibility="Collapsed" Margin="0,0,4,0"
                                                HorizontalAlignment="Right" Orientation="Horizontal">
                <Button x:Name="btnDrillIn" Margin="0,0,2,0" HorizontalAlignment="Right" 
                                            Height="20" Width="20" ToolTip="Drill In"
                                            cal:Message.Attach="[Event Click] = [Action ZoomInToEntity($dataContext)]"                   
                                            Style="{DynamicResource EditControlButtonStyle}"
                                            Content="{iconPacks:MaterialLight ArrangeBringForward}"/>
                <Button x:Name="btnDeleteComponent" Width="20"  Height="20" HorizontalAlignment="Right"
                                          cal:Message.Attach="[Event Click] = [Action DeleteComponent($dataContext)]"
                                          ToolTip="Delete" Style="{DynamicResource EditControlButtonStyle}"
                                          Content="{iconPacks:Material CloseCircleOutline}"/>
            </StackPanel>   
        </DockPanel>
        <DataTemplate.Triggers>
            <Trigger Property="IsMouseOver"  Value="true">
                <Setter TargetName="pnlActions"  Property="Visibility" Value="Visible"/>
            </Trigger>
            <!--<DataTrigger Binding="{Binding Platform}" Value="Windows">
                <Setter TargetName="IconPlaceHolder" Property="Content" Value="{StaticResource WindowsIcon}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Platform}" Value="Java">
                <Setter TargetName="IconPlaceHolder" Property="Content" Value="{StaticResource JavaIcon}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Platform}" Value="FireFox">
                <Setter TargetName="IconPlaceHolder" Property="Content" Value="{StaticResource FireFoxIcon}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Platform}" Value="Chrome">
                <Setter TargetName="IconPlaceHolder" Property="Content" Value="{StaticResource ChromeIcon}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Platform}" Value="Edge">
                <Setter TargetName="IconPlaceHolder" Property="Content" Value="{StaticResource EdgeIcon}"/>
            </DataTrigger>-->
        </DataTemplate.Triggers>       
    </HierarchicalDataTemplate>
  
    <Style TargetType="TreeViewItem" x:Key="GroupedStyle">
        <Setter Property="IsExpanded" Value="True"/>       
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TreeViewItem">
                    <Grid HorizontalAlignment="Stretch">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <!-- Horizontal line to the left -->
                        <Rectangle x:Name="LeftConnector" Grid.Column="0" HorizontalAlignment="Stretch" VerticalAlignment="Top" Width="40" Margin="0,23,0,0"
                            Stroke="{DynamicResource MahApps.Brushes.Accent}" SnapsToDevicePixels="False" Visibility="Collapsed">
                            <Rectangle.Height>
                                <Binding  Mode="OneWay" Converter="{StaticResource horzLineConv}"   ConverterParameter="left" 
                                    RelativeSource="{RelativeSource AncestorLevel=1, AncestorType={x:Type TreeViewItem}}"/>
                            </Rectangle.Height>
                        </Rectangle>

                        <!-- Vertical line below node -->
                        <Rectangle x:Name="VerticalBottomLine"  Grid.Column="0"  Height="Auto"   Stroke="{DynamicResource MahApps.Brushes.Accent}" HorizontalAlignment="Left" VerticalAlignment="Stretch"
                            SnapsToDevicePixels="False" Margin="0,23,0,-23">
                            <Rectangle.Width>
                                <MultiBinding Converter="{StaticResource vertLineConv}">
                                    <Binding Path="DataContext.ComponentCollection.Count" Mode="OneWay" RelativeSource="{RelativeSource Mode=FindAncestor, 
                                        AncestorLevel=2, AncestorType={x:Type TreeViewItem}}" FallbackValue="1"/>
                                    <Binding Mode="OneWay" Path="DataContext.ProcessOrder" RelativeSource="{RelativeSource Mode=FindAncestor, 
                                        AncestorLevel=1, AncestorType={x:Type TreeViewItem}}" FallbackValue="1"/>
                                    <Binding Mode="OneWay" RelativeSource="{RelativeSource Mode=FindAncestor, 
                                        AncestorLevel=1, AncestorType={x:Type TreeViewItem}}" FallbackValue="1"/>
                                </MultiBinding>
                            </Rectangle.Width>
                        </Rectangle>

                        <Border x:Name="ComponentControl" Tag="Component" dd:DragDrop.IsDragSource="True" Grid.Column="1" BorderThickness="2" BorderBrush="{DynamicResource MahApps.Brushes.Accent}" 
                                Margin="0,4,0,8" MinWidth="220" Background="{DynamicResource MahApps.Brushes.Control.Background}">
                            <DockPanel>
                                <DockPanel Grid.Row="0" LastChildFill="True" Margin="4" Width="Auto" HorizontalAlignment="Stretch"
                                            IsHitTestVisible="True" DockPanel.Dock="Top">
                                    <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center" Margin="2"
                                            ToolTip="Control">
                                        <iconPacks:PackIconSimpleIcons Kind="UIkit" Foreground="{DynamicResource MahApps.Brushes.Accent}" />
                                    </StackPanel>
                                    <Label DockPanel.Dock="Left"  Content="{Binding Model.Name}" MaxWidth="160" 
                                            HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
                                    <StackPanel x:Name="pnlActions" DockPanel.Dock="Right" Visibility="Collapsed"
                                            HorizontalAlignment="Right" Orientation="Horizontal">
                                        <Button x:Name="Run" Margin="0,0,2,0" HorizontalAlignment="Right" Height="20" Width="20" ToolTip="Run" DataContext="{Binding Model.GroupActor}"
                                            cal:Message.Attach="[Action RunComponent($dataContext)]" Style="{DynamicResource EditControlButtonStyle}"
                                            Content="{iconPacks:MaterialLight Play}"/>
                                        <Button x:Name="btnDrillIn" Margin="0,0,2,0" HorizontalAlignment="Right" 
                                            Height="20" Width="20" ToolTip="Edit Script"
                                            cal:Message.Attach="[Event Click] = [Action ZoomInToEntity($dataContext)]"                   
                                            Style="{DynamicResource EditControlButtonStyle}"
                                            Content="{iconPacks:MaterialLight ArrangeBringForward}"/>
                                        <Button x:Name="btnDeleteComponent" Width="20"  Height="20" HorizontalAlignment="Right"  Margin="0,0,0,0"
                                          cal:Message.Attach="[Event Click] = [Action DeleteComponent($dataContext)]"
                                          ToolTip="Delete"
                                          Style="{DynamicResource EditControlButtonStyle}"
                                          Content="{iconPacks:Material CloseCircleOutline}"/>
                                    </StackPanel>
                                </DockPanel>
                                <StackPanel DockPanel.Dock="Top" HorizontalAlignment="Stretch" Orientation="Vertical">
                                    <Border x:Name="Seperator" BorderThickness="1" BorderBrush="{DynamicResource MahApps.Brushes.Accent3}"
                                            DockPanel.Dock="Top" Margin="0,0,0,2" Visibility="Collapsed"/>
                                    <Grid x:Name="ContentHost" DockPanel.Dock="Top" Margin="0" Visibility="Collapsed">
                                        <Border x:Name="EmptyMessageBorder"  BorderThickness="1" BorderBrush="{DynamicResource MahApps.Brushes.Accent}" 
                                                        CornerRadius="2" Margin="8" HorizontalAlignment="Stretch" Visibility="Collapsed"
                                                        VerticalAlignment="Center" Background="{DynamicResource MahApps.Brushes.Control.Background}">
                                            <Label x:Name="EmptyMessage" Content="Drop Components here" HorizontalAlignment="Center"
                                                        FontSize="12" VerticalAlignment="Center" Visibility="Collapsed"/>
                                        </Border>

                                        <ItemsPresenter x:Name="ItemsHost" MinWidth="200" Margin="8" Visibility="Visible"                                               
                                              HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                                    </Grid>
                                </StackPanel>
                            </DockPanel>
                        </Border>                     
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="pnlActions" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsExpanded"  Value="True">
                            <Setter TargetName="Seperator"   Property="Visibility"  Value="Visible"/>
                            <Setter TargetName="ContentHost"   Property="Visibility"  Value="Visible"/>
                            <Setter TargetName="ComponentControl"   Property="MinWidth"  Value="460"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding Model.IsValid}" Value="false">
                            <Setter TargetName="ComponentControl" Property="BorderBrush" Value="Red"></Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Model.GroupActor.IsValid}" Value="false">
                            <Setter TargetName="ComponentControl" Property="BorderBrush" Value="Red"></Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Model.GroupActor.IsExecuting}" Value="true">
                            <Setter TargetName="ComponentControl" Property="BorderBrush" Value="Green"></Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Model.GroupActor.IsFaulted}" Value="true">
                            <Setter TargetName="ComponentControl" Property="BorderBrush" Value="Red"></Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Model.IsEnabled}" Value="false">
                            <Setter TargetName="ComponentControl" Property="BorderBrush" Value="Gray"></Setter>
                        </DataTrigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="ComponentControl" Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.AccentBase}"></Setter>
                        </Trigger>
                        <DataTrigger Binding="{Binding ElementName=LeftConnector, Path=Height}" Value="1">
                            <Setter TargetName="LeftConnector"  Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel  HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="Transparent"
                                 IsItemsHost="True"  Orientation="Vertical" Tag="Contained"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>