<controls:MetroWindow x:Class="Pixel.Automation.Appium.Scrapper.AndroidInspectorView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"     
        xmlns:cal="http://www.caliburnproject.org"
        xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
        xmlns:controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"     
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:local="clr-namespace:Pixel.Automation.Appium.Scrapper"
        xmlns:sys="clr-namespace:System;assembly=mscorlib" SizeToContent="WidthAndHeight"     
        mc:Ignorable="d" ResizeMode="NoResize"
        Title="Inspector" Height="Auto" Width="Auto">
    <Window.Resources>

        <local:InverseBooleanToVisibilityConverter x:Key="inverseBoolToVisConverter" />
        <BooleanToVisibilityConverter x:Key="boolToVisConverter"/>
        <Thickness x:Key="ControlMargin">5 5 5 5</Thickness>

        <x:Array x:Key="AvailableTypes" Type="sys:String">
            <sys:String>text</sys:String>
            <sys:String>boolean</sys:String>
            <sys:String>number</sys:String>
            <sys:String>JSON Object</sys:String>
        </x:Array>

        <!--<HierarchicalDataTemplate x:Key="ControlNodeTemplate" ItemsSource="{Binding Children}">
            <Label Content="{Binding DisplayText}"
                       HorizontalAlignment="Stretch" VerticalAlignment="Center" Background="{DynamicResource MahApps.Brushes.Window.Background}"  IsHitTestVisible="True"/>           
        </HierarchicalDataTemplate>
      
        <Style TargetType="TreeViewItem" x:Key="ControlNodeStyle">
            <Setter Property="IsExpanded" Value="{Binding IsExpanded}"/>           
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TreeViewItem">
                        <DockPanel>
                            <ContentPresenter DockPanel.Dock="Top" ContentSource="Header" HorizontalAlignment="Left" Margin="0,2,0,2"/>
                            <StackPanel x:Name="ContentHost" Visibility="Collapsed" DockPanel.Dock="Top" HorizontalAlignment="Stretch" Orientation="Vertical">
                                <ItemsPresenter x:Name="ItemsHost" MinWidth="200" Margin="8,2,8,2" Visibility="Visible"                                               
                                                HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                            </StackPanel>
                        </DockPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded"  Value="True">
                                <Setter TargetName="ContentHost" Property="Visibility"  Value="Visible"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>          
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <StackPanel  HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                 IsItemsHost="True"  Orientation="Vertical"/>
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
        </Style>-->

    </Window.Resources>

    <controls:MetroWindow.RightWindowCommands>
        <controls:WindowCommands>
            <Button x:Name="RefreshScreen" ToolTip="Refresh Screen" IsEnabled="{Binding CanRefreshScreen}" 
                    cal:Message.Attach="[Event Click] = [Action RefreshScreen()]"
                    Visibility="{Binding IsConnected, Converter={StaticResource boolToVisConverter}}" Content="{iconPacks:Material Refresh}"/>
        </controls:WindowCommands>
    </controls:MetroWindow.RightWindowCommands>

    <StackPanel Orientation="Vertical">

        <StackPanel x:Name="SessionDetailsPanel" Orientation="Vertical" Visibility="{Binding IsConnected, Converter={StaticResource inverseBoolToVisConverter}}">
            <Grid >
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                    <RowDefinition Height="60"></RowDefinition>
                    <RowDefinition Height="60"></RowDefinition>
                </Grid.RowDefinitions>
                <StackPanel Orientation="Vertical" Margin="{StaticResource ControlMargin}" Grid.Row="0">
                    <Label Content="Remote Url"/>
                    <TextBox x:Name="RemoteUrl" Text="{Binding RemoteUrl, ValidatesOnNotifyDataErrors=True,UpdateSourceTrigger=PropertyChanged}"
                     controls:TextBoxHelper.ClearTextButton="True" controls:TextBoxHelper.UseFloatingWatermark="True"                     
                     controls:TextBoxHelper.Watermark="Remote Url"  HorizontalAlignment="Stretch"
                     VerticalAlignment="Top" Margin="5,5,5,0"></TextBox>
                </StackPanel>
                <StackPanel Orientation="Vertical" Margin="{StaticResource ControlMargin}" Grid.Row="1">
                    <Label Content="Application"/>
                    <DockPanel Margin="5,5,5,0" HorizontalAlignment="Stretch" LastChildFill="True">
                        <Button x:Name="PickApplication"  Width="20" Height="Auto" Margin="0" Style="{DynamicResource SquaredButtonStyle}" 
                            Content="{iconPacks:FontAwesome Kind=FolderOpenRegular}" DockPanel.Dock="Right"
                            BorderThickness="0,1,1,1"  Foreground="{DynamicResource MahApps.Brushes.Accent}" 
                            RenderTransformOrigin="0.5,0.5" ToolTip="Browse for application"/>
                        <TextBox x:Name="Application" Text="{Binding Application}" HorizontalAlignment="Stretch"
                                 controls:TextBoxHelper.ClearTextButton="True" controls:TextBoxHelper.UseFloatingWatermark="True"                     
                                 controls:TextBoxHelper.Watermark="Application" DockPanel.Dock="Left" />
                    </DockPanel>
                </StackPanel>
                <StackPanel Grid.Row="2">
                    <DataGrid x:Name="DesiredCapabilities" ItemsSource="{Binding DesiredCapabilities}" MaxHeight="600"
                      CanUserSortColumns="True" CanUserAddRows="False" CanUserResizeRows="False" CanUserResizeColumns="True"                 
                      GridLinesVisibility="All" SelectionUnit="Cell"
                      Margin="10" Padding="5" ScrollViewer.HorizontalScrollBarVisibility="Disabled"    
                      AutoGenerateColumns="False"                
                      RowHeaderWidth="0" HorizontalAlignment="Stretch" VerticalAlignment="Top">
                        <DataGrid.Columns>
                            <DataGridTemplateColumn Header="Key">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBox x:Name="Key" Width="250" HorizontalAlignment="Stretch" VerticalAlignment="Center"  Margin="15,0,0,0"                                  
                                            Text="{Binding Key}"></TextBox>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="Type">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <ComboBox x:Name="AvailableTypes" ItemsSource="{StaticResource AvailableTypes}" 
                                      SelectedItem="{Binding Type, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                      HorizontalAlignment="Stretch" VerticalAlignment="Center"  Margin="15,0,0,0" MinWidth="200" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="Value">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBox x:Name="Key" Width="250" HorizontalAlignment="Stretch" VerticalAlignment="Center"  Margin="15,0,0,0"                                  
                                             Text="{Binding Value}" ></TextBox>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button x:Name="RemoveCapability" Margin="0,0,2,0" HorizontalAlignment="Right" 
                                                cal:Message.Attach="[Event Click] = [Action RemoveCapability($dataContext)]"
                                            Height="20" Width="20" ToolTip="Delete row"                                                                                                       
                                            Style="{DynamicResource EditControlButtonStyle}"
                                            Content="{iconPacks:Material Delete}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                </StackPanel>
                <StackPanel Grid.Row="3" HorizontalAlignment="Stretch">
                    <Button x:Name="AddCapability" Margin="5,5,18,5" HorizontalAlignment="Right" 
                                            Height="20" Width="20" ToolTip="Add row"                                                                                                       
                                            Style="{DynamicResource EditControlButtonStyle}"
                                            Content="{iconPacks:Material PlusCircle}"/>
                </StackPanel>
                <StackPanel Grid.Row="4" HorizontalAlignment="Stretch" Orientation="Vertical">
                    <Border DockPanel.Dock="Top" BorderThickness="1" Height="1" HorizontalAlignment="Stretch" Width="{Binding Path=Width,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type DockPanel}}}" BorderBrush="{DynamicResource MahApps.Brushes.Accent}"/>
                    <Button x:Name="Connect" Content="Start Session" Width="100" HorizontalAlignment="Right"  Margin="5,10,15,5" Style="{DynamicResource MahApps.Styles.Button.Square.Accent}"/>
                </StackPanel>
            </Grid>          
        </StackPanel>

        <StackPanel x:Name="InspectorPanel" Orientation="Horizontal" Visibility="{Binding IsConnected, Converter={StaticResource boolToVisConverter}}" Height="800">
            <DockPanel Grid.Row="0" Margin="5">
                <StackPanel VerticalAlignment="Stretch" DockPanel.Dock="Left">
                    <Image x:Name="MobileScreen" Margin="2" Source="{Binding MobileScreen}" Width="380" Height="770" Stretch="UniformToFill"/>
                </StackPanel>
                <!--<Border BorderThickness="2" BorderBrush="{DynamicResource MahApps.Brushes.Accent2}"
                            VerticalAlignment="Stretch" Margin="4,4,2,4" 
                            Background="{DynamicResource MahApps.Brushes.Control.Background}" DockPanel.Dock="Left"/>
                <ScrollViewer DockPanel.Dock="Left" Height="776" ScrollViewer.CanContentScroll="True" ScrollViewer.VerticalScrollBarVisibility="Auto">
                    <TreeView x:Name="ControlTree" ItemsSource="{Binding Controls}" ItemTemplate="{StaticResource ControlNodeTemplate}"
                              DockPanel.Dock="Left" Margin="20,0,0,0" Width="340"
                              ScrollViewer.CanContentScroll="True" HorizontalAlignment="Left" HorizontalContentAlignment="Left"
                              ScrollViewer.VerticalScrollBarVisibility="Auto" VerticalAlignment="Top"
                              cal:Message.Attach="[Event SelectedItemChanged] = [Action SetSelectedItem($this.SelectedItem)]">

                    </TreeView>
                </ScrollViewer>-->            
                <Border BorderThickness="1" BorderBrush="{DynamicResource MahApps.Brushes.Accent2}"
                            VerticalAlignment="Stretch" Margin="10,4,2,4" 
                            Background="{DynamicResource MahApps.Brushes.Control.Background}" DockPanel.Dock="Left"/>
                <xctk:PropertyGrid x:Name="PropertyGrid" SelectedObject="{Binding SelectedControl.Control}" ShowSortOptions="True" IsCategorized="True"
                                   PropertyContainerStyle="{StaticResource PropertyItemStyle}" Style="{StaticResource PropertyGridStyle}"
                                   BorderThickness="0"  ShowSearchBox="True" Width="340" DockPanel.Dock="Right" Margin="20,0,0,0"/>               
            </DockPanel>
        </StackPanel>

    </StackPanel>
</controls:MetroWindow>
