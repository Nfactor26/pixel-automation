<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

	<Target Name="BuildPlugins" AfterTargets="Build" Condition="'$(TargetFramework)' == 'net8.0' Or '$(TargetFramework)' == 'net8.0-windows'">
		<ItemGroup Condition="'$(TargetFramework)' == 'net8.0' Or '$(TargetFramework)' == 'net8.0-windows'">
			<PluginProject Include="..\Pixel.Automation.Assertions.Components\Pixel.Automation.Assertions.Components.csproj"/>	
			<PluginProject Include="..\Pixel.Automation.Scripting.Components\Pixel.Automation.Scripting.Components.csproj"/>
			<PluginProject Include="..\Pixel.Automation.Web.Playwright.Components\Pixel.Automation.Web.Playwright.Components.csproj"/>
			<PluginProject Include="..\Pixel.Automation.Web.Selenium.Components\Pixel.Automation.Web.Selenium.Components.csproj"/>			
			<PluginProject Include="..\Pixel.Automation.Appium.Components\Pixel.Automation.Appium.Components.csproj"/>
			<PluginProject Include="..\Pixel.Automation.RestApi.Components\Pixel.Automation.RestApi.Components.csproj"/>
			<PluginProject Include="..\Pixel.Automation.Image.Matching.Components\Pixel.Automation.Image.Matching.Components.csproj"/>
			<PluginProject Include="..\Pixel.Automation.IO.Components\Pixel.Automation.IO.Components.csproj" />
		</ItemGroup>
		<ItemGroup Condition="'$(TargetFramework)' == 'net8.0-windows'">			
			<PluginProject Include="..\Pixel.Automation.Native.Windows\Pixel.Automation.Native.Windows.csproj"/>
			<PluginProject Include="..\Pixel.Automation.UIA.Components\Pixel.Automation.UIA.Components.csproj"/>
			<PluginProject Include="..\Pixel.Automation.Java.Access.Bridge.Components\Pixel.Automation.Java.Access.Bridge.Components.csproj"/>		
			<PluginProject Include="..\Pixel.Automation.Input.Devices.Components\Pixel.Automation.Input.Devices.Components.csproj"/>
			<PluginProject Include="..\Pixel.Automation.Window.Management.Components\Pixel.Automation.Window.Management.Components.csproj"/>
		</ItemGroup>
		<ItemGroup Condition="'$(TargetFramework)' == 'net8.0'">
			<PluginProject Include="..\Pixel.Automation.Native.Linux\Pixel.Automation.Native.Linux.csproj"/>
		</ItemGroup>
		<Message Text="Build Plugins -- TargetFramework : $(TargetFramework), RunTimeIdentifier : $(RuntimeIdentifier)" Importance="high"/>
		<MSBuild Projects="@(PluginProject)" Targets="Build" Properties="Configuration=$(Configuration);
				 RuntimeIdentifier=$(RuntimeIdentifier);"/>
		<Message Text="Build Plugins -- completed" Importance="high"/>
	</Target>

	<Target Name="CopyPlugins" AfterTargets="BuildPlugins" Condition="'$(TargetFramework)' == 'net8.0' Or '$(TargetFramework)' == 'net8.0-windows'">
		<ItemGroup Condition="'$(TargetFramework)' == 'net8.0' Or '$(TargetFramework)' == 'net8.0-windows'">
			<PluginArtifacts Include="..\Pixel.Automation.Assertions.Components\bin\$(Configuration)\$(TargetFramework)\$(RuntimeIdentifier)\**\*.*">
				<Name>Pixel.Automation.Assertions.Components</Name>
			</PluginArtifacts>			
			<PluginArtifacts Include="..\Pixel.Automation.Scripting.Components\bin\$(Configuration)\$(TargetFramework)\$(RuntimeIdentifier)\**\*.*">
				<Name>Pixel.Automation.Scripting.Components</Name>
			</PluginArtifacts>
			<PluginArtifacts Include="..\Pixel.Automation.Web.Playwright.Components\bin\$(Configuration)\$(TargetFramework)\$(RuntimeIdentifier)\**\*.*">
				<Name>Pixel.Automation.Web.Playwright.Components</Name>
			</PluginArtifacts>
			<PluginArtifacts Include="..\Pixel.Automation.Web.Selenium.Components\bin\$(Configuration)\$(TargetFramework)\$(RuntimeIdentifier)\**\*.*">
				<Name>Pixel.Automation.Web.Selenium.Components</Name>
			</PluginArtifacts>			
			<PluginArtifacts Include="..\Pixel.Automation.Appium.Components\bin\$(Configuration)\$(TargetFramework)\$(RuntimeIdentifier)\**\*.*">
				<Name>Pixel.Automation.Appium.Components</Name>
			</PluginArtifacts>
		   <PluginArtifacts Include="..\Pixel.Automation.RestApi.Components\bin\$(Configuration)\$(TargetFramework)\$(RuntimeIdentifier)\**\*.*">
				<Name>Pixel.Automation.RestApi.Components</Name>
			</PluginArtifacts>
			<PluginArtifacts Include="..\Pixel.Automation.IO.Components\bin\$(Configuration)\$(TargetFramework)\$(RuntimeIdentifier)\**\*.*">
				<Name>Pixel.Automation.IO.Components</Name>
			</PluginArtifacts>
		</ItemGroup>
		<ItemGroup Condition="'$(TargetFramework)' == 'net8.0-windows'" >
			<PluginArtifacts Include="..\Pixel.Automation.Native.Windows\bin\$(Configuration)\$(TargetFramework)\$(RuntimeIdentifier)\**\*.*">
				<Name>Pixel.Automation.Native.Windows</Name>
			</PluginArtifacts>		
			<PluginArtifacts Include="..\Pixel.Automation.UIA.Components\bin\$(Configuration)\$(TargetFramework)\$(RuntimeIdentifier)\**\*.*">
				<Name>Pixel.Automation.UIA.Components</Name>
			</PluginArtifacts>
			<PluginArtifacts Include="..\Pixel.Automation.Java.Access.Bridge.Components\bin\$(Configuration)\$(TargetFramework)\$(RuntimeIdentifier)\**\*.*">
				<Name>Pixel.Automation.Java.Access.Bridge.Components</Name>
			</PluginArtifacts>
			<PluginArtifacts Include="..\Pixel.Automation.Image.Matching.Components\bin\$(Configuration)\$(TargetFramework)\$(RuntimeIdentifier)\**\*.*">
				<Name>Pixel.Automation.Image.Matching.Components</Name>
			</PluginArtifacts>
			<PluginArtifacts Include="..\Pixel.Automation.Input.Devices.Components\bin\$(Configuration)\$(TargetFramework)\$(RuntimeIdentifier)\**\*.*">
				<Name>Pixel.Automation.Input.Devices.Components</Name>
			</PluginArtifacts>
			<PluginArtifacts Include="..\Pixel.Automation.Window.Management.Components\bin\$(Configuration)\$(TargetFramework)\$(RuntimeIdentifier)\**\*.*">
				<Name>Pixel.Automation.Window.Management.Components</Name>
			</PluginArtifacts>
		</ItemGroup>
		<ItemGroup Condition="'$(TargetFramework)' == 'net8.0'" >
			<PluginArtifacts Include="..\Pixel.Automation.Native.Linux\bin\$(Configuration)\$(TargetFramework)\$(RuntimeIdentifier)\**\*.*">
				<Name>Pixel.Automation.Native.Linux</Name>
			</PluginArtifacts>
			<PluginArtifacts Include="..\Pixel.Automation.Image.Matching.Components\bin\$(Configuration)\$(TargetFramework)\$(RuntimeIdentifier)\**\*.*">
				<Name>Pixel.Automation.Image.Matching.Components</Name>
			</PluginArtifacts>
		</ItemGroup>
		<Message Text="Copying Plugins -- %(PluginArtifacts.FullPath) to $(TargetDir)Plugin\%(PluginArtifacts.Name)" Importance="high"/>
		<Copy SourceFiles="%(PluginArtifacts.FullPath)" DestinationFolder="$(TargetDir)Plugins\%(PluginArtifacts.Name)\%(RecursiveDir)"/>
		<Message Text="Copying Plugins -- completed" Importance="high"/>
	</Target>

	<Target Name="MoveOpenCVRuntimes" AfterTargets="CopyPlugins" Condition="'$(TargetFramework)' == 'net8.0' Or '$(TargetFramework)' == 'net8.0-windows'">
		<ItemGroup>
			<OpenCVRunTimeFiles Include="$(TargetDir)\Plugins\Pixel.Automation.Image.Matching.Components\runtimes\**\*.*"/>
		</ItemGroup>
		<ItemGroup  Condition="'$(RunTimeIdentifier)' == 'win-x64'">
			<OpenCVRunTimeAssemblies Include="$(TargetDir)\Plugins\Pixel.Automation.Image.Matching.Components\opencv_videoio_ffmpeg480_64.dll"/>
			<OpenCVRunTimeAssemblies Include="$(TargetDir)\Plugins\Pixel.Automation.Image.Matching.Components\OpenCvSharpExtern.dll"/>
		</ItemGroup>
		<ItemGroup  Condition="'$(RunTimeIdentifier)' == 'linux-x64'">
			<OpenCVRunTimeAssemblies Include="$(TargetDir)\Plugins\Pixel.Automation.Image.Matching.Components\libOpenCvSharpExtern.so"/>			
		</ItemGroup>
		<!--For visual studio builds of pixel-designer, move runtime folder from plugins directory to application-root\runtime directory-->
		<Move  SourceFiles="@(OpenCVRunTimeFiles)"  DestinationFolder="$(TargetDir)\runtimes\%(RecursiveDir)" ContinueOnError="true"/>
		<!--Copy OpenCvSharpExtern.dll and opencv_videoio_ffmpeg480.dll for windows or libOpenCvSharpExtern.so for linux to application root directory from plugin directory-->
		<Move  SourceFiles="@(OpenCVRunTimeAssemblies)" Condition="'$(RunTimeIdentifier)' == 'win-x64'"  DestinationFolder="$(TargetDir)"/>
	</Target>

	
	<Target Name="selenium-manager" AfterTargets="CopyPlugins" Condition="'$(TargetFramework)' == 'net8.0' Or '$(TargetFramework)' == 'net8.0-windows'">
		<ItemGroup>
			<PluginRuntimeFiles Include="$(TargetDir)\Plugins\Pixel.Automation.Web.Selenium.Components\selenium-manager\**\*.*"/>
		</ItemGroup>
		<Move  SourceFiles="@(PluginRuntimeFiles)"  DestinationFolder="$(TargetDir)\selenium-manager\%(RecursiveDir)" ContinueOnError="true"/>
		<RemoveDir Directories="$(TargetDir)\Plugins\Pixel.Automation.Web.Selenium.Components\selenium-manager"/>
		<Message Text="Move selenium-manager -- completed" Importance="high"/>
	</Target>

	<!--Move .playwright folder and playwright.ps1 file to app directory and delete these from Pixel.Automation.Web.Playwright.Components
		and Pixel.Automation.Web.Scrapper plugins-->
	<Target Name="MovePlaywrightDependencies" AfterTargets="CopyPlugins"  Condition="'$(TargetFramework)' == 'net8.0' Or '$(TargetFramework)' == 'net8.0-windows'">	
		<ItemGroup>
			<PlaywrightFiles Include="$(TargetDir)\Plugins\Pixel.Automation.Web.Playwright.Components\.playwright\**\*.*;"/>
		</ItemGroup>
		<Message Text="Move Playwright Dependencies -- Target Directory : $(TargetDir)" Importance="high"/>
		<Move  SourceFiles="@(PlaywrightFiles)" DestinationFolder="$(TargetDir)\.playwright\%(RecursiveDir)"/>
		<Move  SourceFiles="$(TargetDir)\Plugins\Pixel.Automation.Web.Playwright.Components\playwright.ps1"
			   DestinationFolder="$(TargetDir)"/>
		<RemoveDir Directories="$(TargetDir)\Plugins\Pixel.Automation.Web.Playwright.Components\.playwright"/>	
		<Message Text="Move Playwright Dependencies -- completed" Importance="high"/>
	</Target>

	<Target Name="RemoveUnwantedDirectories" AfterTargets="CopyPlugins" >
		<ItemGroup Condition="'$(RunTimeIdentifier)' == 'win-x64'">
			<BuildArtifacts Include="$(TargetDir)\selenium-manager\linux"/>
			<BuildArtifacts Include="$(TargetDir)\selenium-manager\macos"/>			
			<BuildArtifacts Include="$(TargetDir)\.playwright\node\linux-x64"/>
			<BuildArtifacts Include="$(TargetDir)\runtimes\win-arm64"/>
			<BuildArtifacts Include="$(TargetDir)\runtimes\win-x86"/>
		</ItemGroup>
		<ItemGroup Condition="'$(RunTimeIdentifier)' == 'linux-x64'">
			<BuildArtifacts Include="$(TargetDir)\selenium-manager\windows"/>
			<BuildArtifacts Include="$(TargetDir)\selenium-manager\macos"/>			
			<BuildArtifacts Include="$(TargetDir)\.playwright\node\win32_x64"/>			
		</ItemGroup>	
		<RemoveDir Directories="@(BuildArtifacts)"/>		
	</Target>

	<Target Name="RemoveUnwantedFiles" AfterTargets="CopyPlugins" >	
		<ItemGroup>
			<!--Delete Microsoft.Bcl.AsyncInterfaces.dll from root as Playwright plugin requires a higher version and fails to load if this file is already present in app root-->
			<BuildArtifacts Include="$(TargetDir)\Microsoft.Bcl.AsyncInterfaces.dll"/>
		</ItemGroup>	
		<Delete Files="@(BuildArtifacts)" >
			<Output TaskParameter="DeletedFiles" ItemName="DeletedList"/>
		</Delete>
		<Message Text="Deleted files: '@(DeletedList)'"/>
	</Target>

</Project>