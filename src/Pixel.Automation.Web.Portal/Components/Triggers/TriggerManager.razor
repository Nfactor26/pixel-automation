@using Pixel.Automation.Core;
<MudTable UserAttributes="@(new (){{"id","tblTriggers"}})" Items="@(Triggers ?? Enumerable.Empty<SessionTrigger>())" Dense="false" Hover="true" ReadOnly="false"
          CanCancelEdit="true" Filter="@(new Func<SessionTrigger,bool>(FilterFunc))" @ref="table"
          @bind-SelectedItem="selectedTrigger" SortLabel="Sort By"         
          IsEditRowSwitchingBlocked="true" Elevation="4">
    <ToolBarContent>
        <MudText Typo="Typo.h6">Triggers</MudText>
        <MudIconButton UserAttributes="@(new (){{"id","btnNewTrigger"}})" Icon="@Icons.Material.Outlined.AddCircleOutline" Size="Size.Medium"
                       @onclick="@(() => OnAddItem.InvokeAsync())" Color="Color.Primary"></MudIconButton>
        <MudSpacer />
        <MudTextField UserAttributes="@(new (){{"id","txtSearchBox"}})" @bind-Value="searchString" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
    </ToolBarContent>
    <ColGroup>
        <col style="width:5%;" />
        <col style="width:16%;" />
        <col style="width:16%;" />
        <col style="width:16%;" />     
        <col style="width:16%;" />
        <col style="width:16%;" />
        <col style="width:5%;" />
        <col style="width:5%;" />
        <col style="width:5%;" />
    </ColGroup>
    <HeaderContent>
        <MudTh></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<SessionTrigger, object>(x=>x.Name)">Name</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<SessionTrigger, object>(x=>x.Handler)">Handler</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<SessionTrigger, object>(x=>x.Group)">Group</MudTableSortLabel></MudTh>
        <MudTh>Cron Expression</MudTh>
        <MudTh>Arguments</MudTh>
        <MudTh>
            @if (Triggers?.Any() ?? false)
            {
                if(Triggers.Any(t => t.IsEnabled))
                {
                    <MudIconButton UserAttributes="@(new (){{"id","btnPauseAll"}})" Icon="@Icons.Material.Filled.PauseCircle" Color="Color.Warning"
                           @onclick="() => OnPauseAll.InvokeAsync()" Size="Size.Medium"></MudIconButton>
                }
                else
                {
                    <MudIconButton UserAttributes="@(new (){{"id","btnResumeAll"}})" Icon="@Icons.Material.Filled.PlayCircle" Color="Color.Primary"
                           @onclick="() => OnResumeAll.InvokeAsync()" Size="Size.Medium"></MudIconButton>
                }
            }
        </MudTh>
        <MudTh></MudTh>
        <MudTh></MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd UserAttributes="@(new (){{"id","tdRunNow"}})" DataLabel="">
            <MudIconButton UserAttributes="@(new (){{"id","btnResumeTrigger"}})" Icon="@Icons.Material.Filled.RunCircle" Color="Color.Primary"
                           @onclick="() => OnTriggerNow.InvokeAsync(context)" Size="Size.Medium"></MudIconButton>
        </MudTd>
        <MudTd UserAttributes="@(new (){{"id","tdName"}})" DataLabel="Name">@context.Name</MudTd>
        <MudTd UserAttributes="@(new (){{"id","tdHandler"}})" DataLabel="Handler">@context.Handler</MudTd>
        <MudTd UserAttributes="@(new (){{"id","tdGroup"}})" DataLabel="Group">@context.Group</MudTd>
        @if(context is CronSessionTrigger cronSessionTrigger)
        {
            <MudTd UserAttributes="@(new (){{"id","tdCronExpression"}})" DataLabel="Cron Expression">@cronSessionTrigger.CronExpression</MudTd>
        }
        <MudTd UserAttributes="@(new (){{"id","tdParameters"}})" DataLabel="Parameters">@context.Parameters.ToCommaSeperateString()</MudTd>
        <MudTd UserAttributes="@(new (){{"id","tdEnabled"}})" DataLabel="">
            @if (@context.IsEnabled)
            {
                <MudIconButton UserAttributes="@(new (){{"id","btnPauseTrigger"}})" Icon="@Icons.Material.Filled.PauseCircle" Color="Color.Warning"
                           @onclick="() => OnPauseItem.InvokeAsync(context)" Size="Size.Medium"></MudIconButton>
            }
            else
            {
                <MudIconButton UserAttributes="@(new (){{"id","btnResumeTrigger"}})" Icon="@Icons.Material.Outlined.PlayCircle" Color="Color.Primary"
                           @onclick="() => OnResumeItem.InvokeAsync(context)" Size="Size.Medium"></MudIconButton>
            }
        </MudTd>
        <MudTd DataLabel="">
            <MudIconButton UserAttributes="@(new (){{"id","btnEdit"}})" Icon="@Icons.Material.Filled.Edit" Color="Color.Primary"
                           @onclick="() => OnUpdateItem.InvokeAsync(context)" Size="Size.Medium"></MudIconButton>
        </MudTd>
        <MudTd DataLabel="">
            <MudIconButton UserAttributes="@(new (){{"id","btnDelete"}})" Icon="@Icons.Material.Filled.Delete" Color="Color.Error"
                           @onclick="() => OnDeleteItem.InvokeAsync(context)" Size="Size.Medium"></MudIconButton>
        </MudTd>
    </RowTemplate>   
    <PagerContent>
        <MudTablePager />
    </PagerContent>   
</MudTable>