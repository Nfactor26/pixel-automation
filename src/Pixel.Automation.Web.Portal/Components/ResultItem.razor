
<MudTd>
    <MudToggleIconButton ToggledChanged="@(() => ToggleErrorDetailPanelVisibility.InvokeAsync(ResultViewModel.Id))"
                         Icon="@Icons.Material.Filled.ExpandMore" Color="@Color.Error" Disabled="@isDisabled"
                         ToggledIcon="@Icons.Material.Filled.ExpandLess" ToggledColor="@Color.Error" />
</MudTd>
<MudTd DataLabel="#">
    @ResultViewModel.ExecutionOrder
</MudTd>
<MudTd DataLabel="Fixture Name">
    @ResultViewModel.FixtureName
</MudTd>
<MudTd DataLabel="Test Name">
    @ResultViewModel.TestName
</MudTd>
<MudTd DataLabel="Execution Time">@String.Format("{0:0.000#}", ResultViewModel.ExecutionTime) m</MudTd>
<MudTd DataLabel="Status">
    <ResultIcon Result="@ResultViewModel.Result" />
</MudTd>
<MudTd DataLabel="Statistics">
    <MudButton Link="@statisticsLink"   Variant="Variant.Filled"  >
        View Stats
    </MudButton>
</MudTd>

@code {

    [Parameter]
    public TestResultViewModel ResultViewModel { get; set; }

    private bool isDisabled = false;
    private string statisticsLink;

    [Parameter]
    public EventCallback<string> ToggleErrorDetailPanelVisibility { get; set; }

    protected override void OnInitialized()
    {
        this.isDisabled = ResultViewModel.ErrorDetails == null;
        this.statisticsLink = $"test-statistics/{ResultViewModel.TestId}";
        base.OnInitialized();
    }
}




