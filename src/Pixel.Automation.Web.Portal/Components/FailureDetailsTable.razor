<MudTable Items="@(failuresViewModel ?? Enumerable.Empty<FailureDetailsViewModel>())"
          Dense="false" Hover="true" ReadOnly="true" SortLabel="Sort By" Elevation="4">
     <ToolBarContent>
        <MudText Typo="Typo.h6">@TableHeader</MudText>     
    </ToolBarContent>
    <HeaderContent>
        <MudTh></MudTh>
        <MudTh>Exception</MudTh>
        <MudTh>Error Message</MudTh>
        <MudTh>Failed On</MudTh>
        <MudTh>Failure Reason</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="">
            <MudToggleIconButton  ToggledChanged="@(() => OnToggleDetailsPanel(context))"  Icon="@Icons.Material.Filled.ExpandMore" Color="@Color.Error"
                                 ToggledIcon="@Icons.Material.Filled.ExpandLess" ToggledColor="@Color.Error" />
        </MudTd>
        <MudTd DataLabel="Exception">
            @context.Exception
        </MudTd>
        <MudTd DataLabel="Error Message">
            @context.ShortMessage
        </MudTd>
        <MudTd DataLabel="Last Failed On">
            @context.FailedOn.ToLocalTime()
        </MudTd>
        <MudTd DataLabel="Failure Reason">
            @(context.FailureReason ?? "Not Identified")
        </MudTd>
    </RowTemplate>
    <ChildRowContent>
        @if (context.IsDetailedViewVisible)
        {
           <ErrorDetails FailureDetails="@context"/>      
        }

    </ChildRowContent>
    <PagerContent>
        <MudTablePager PageSizeOptions="pageSizeOptions" RowsPerPageString="Results Per Page" />
    </PagerContent>
    <ColGroup>
        <col style="width:20px;" />
        <col />
        <col />
        <col />
        <col />
    </ColGroup>
</MudTable>


@code {

    private readonly int[] pageSizeOptions = { 5, 10 };
    private List<FailureDetailsViewModel> failuresViewModel = new List<FailureDetailsViewModel>();

    [Parameter]
    public string TableHeader { get; set; } = string.Empty;

    [Parameter]
    public IEnumerable<FailureDetails> Failures { get; set; }

    protected override void OnParametersSet()
    {
        foreach (var failure in Failures)
        {
            failuresViewModel.Add(new FailureDetailsViewModel(failure));
        }
        base.OnParametersSet();
    }

    private void OnToggleDetailsPanel(FailureDetailsViewModel failureDetailsVm)
    {
        failureDetailsVm.IsDetailedViewVisible = !failureDetailsVm.IsDetailedViewVisible;
    }
}
