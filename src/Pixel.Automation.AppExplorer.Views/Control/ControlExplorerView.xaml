<UserControl x:Class="Pixel.Automation.AppExplorer.Views.Control.ControlExplorerView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"           
             xmlns:dd="clr-namespace:GongSolutions.Wpf.DragDrop;assembly=GongSolutions.Wpf.DragDrop"
             xmlns:cal="http://www.caliburnproject.org"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks" cal:Bind.AtDesignTime="True"
             xmlns:controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">

    <UserControl.Resources>
        
        <Style x:Key="ControlLabel" TargetType="{x:Type TextBox}">
            <Setter Property="IsReadOnly" Value="True"></Setter>
            <Setter Property="HorizontalAlignment" Value="Center"></Setter>
            <Setter Property="TextWrapping" Value="Wrap"></Setter>
            <Setter Property="BorderThickness" Value="0"></Setter>
            <Setter Property="FontSize" Value="12"></Setter>
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding
                            RelativeSource={RelativeSource
                                Mode=FindAncestor,
                                AncestorType={x:Type ListBoxItem}},
                                Path=IsSelected}" Value="True"></Condition>
                        <Condition Binding="{Binding
                            RelativeSource={RelativeSource
                                Mode=FindAncestor,
                                AncestorType={x:Type ListBox}},
                                Path=DataContext.CanEdit}" Value="True"></Condition>
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter Property="IsReadOnly" Value="False"></Setter>
                        <Setter Property="BorderThickness" Value="2"></Setter>
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}, Path=IsSelected}" Value="True">
                    <Setter Property="FontSize" Value="14"></Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style  x:Key="LinkButton"  TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <TextBlock TextDecorations="Underline">
                        <ContentPresenter/>
                        </TextBlock>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Accent}" />
            <Setter Property="Margin" Value="10,5,0,5" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Foreground" Value="Red" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <DataTemplate x:Key="ControlItemTemplate">
            <StackPanel x:Name="ControlRoot" Orientation="Vertical" Margin="15,10,0,0"  Width="160" Height="140" Background="Transparent">
                <StackPanel.ContextMenu>
                    <ContextMenu>
                        <ContextMenu.Template>
                            <ControlTemplate>
                                <StackPanel>
                                    <MenuItem x:Name="Edit" Header="Edit" cal:Action.TargetWithoutContext="{Binding Path=DataContext, RelativeSource={RelativeSource AncestorType={x:Type Grid}, AncestorLevel=2}}" cal:Message.Attach="[Event Click] = [Action EditControlAsync($dataContext)]" ></MenuItem>
                                    <MenuItem x:Name="Configure" Header="Configure" cal:Action.TargetWithoutContext="{Binding Path=DataContext, RelativeSource={RelativeSource AncestorType={x:Type Grid}, AncestorLevel=2}}" cal:Message.Attach="[Event Click] = [Action ConfigureControlAsync($dataContext)]" ></MenuItem>
                                    <MenuItem x:Name="Rename" Header="Rename" cal:Action.TargetWithoutContext="{Binding Path=DataContext, RelativeSource={RelativeSource AncestorType={x:Type Grid}, AncestorLevel=2}}" cal:Message.Attach="[Event Click] = [Action ToggleRename($dataContext)]" ></MenuItem>
                                    <MenuItem x:Name="Clone" Header="Clone" cal:Action.TargetWithoutContext="{Binding Path=DataContext, RelativeSource={RelativeSource AncestorType={x:Type Grid}, AncestorLevel=2}}" cal:Message.Attach="[Event Click] = [Action CloneControl($dataContext)]" ></MenuItem>
                                    <MenuItem x:Name="CreateRevision" Header="Create Revision" cal:Action.TargetWithoutContext="{Binding Path=DataContext, RelativeSource={RelativeSource AncestorType={x:Type Grid}, AncestorLevel=2}}" cal:Message.Attach="[Event Click] = [Action CreateRevision($dataContext)]" ></MenuItem>
                                    <MenuItem x:Name="ChangeImage" Header="Change Image" cal:Action.TargetWithoutContext="{Binding Path=DataContext, RelativeSource={RelativeSource AncestorType={x:Type Grid}, AncestorLevel=2}}" cal:Message.Attach="[Event Click] = [Action ChangeImageFromExistingAsync($dataContext)]" ></MenuItem>
                                    <MenuItem x:Name="MoveToScreen" Header="Move To Screen" cal:Action.TargetWithoutContext="{Binding Path=DataContext, RelativeSource={RelativeSource AncestorType={x:Type Grid}, AncestorLevel=2}}" cal:Message.Attach="[Event Click] = [Action MoveToScreen($dataContext)]" ></MenuItem>
                                </StackPanel>
                            </ControlTemplate>
                        </ContextMenu.Template>
                    </ContextMenu>
                </StackPanel.ContextMenu>
                <Border x:Name="ControlBorder" BorderBrush="{DynamicResource MahApps.Brushes.Accent3}" Background="Transparent" BorderThickness="2" CornerRadius="4">
                    <Image x:Name="ControlImage" Source="{Binding ImageSource}" Stretch="Uniform" Margin="5" Width="148" Height="80"
                                           HorizontalAlignment="Center" VerticalAlignment="Center"/>
                </Border>
                <TextBox x:Name="ControlName" Text="{Binding ControlName}"   Margin="5"  Style="{StaticResource ControlLabel}" IsHitTestVisible="True" HorizontalAlignment="Stretch"
                                         cal:Action.TargetWithoutContext="{Binding Path=DataContext, RelativeSource={RelativeSource AncestorType={x:Type Grid}, AncestorLevel=2}}"
                                         cal:Message.Attach="[Event KeyDown] = [Action RenameControl($executionContext,$dataContext)];[Event MouseDoubleClick] = [Action ToggleRename($dataContext)];"
                                         HorizontalContentAlignment="Center" Height="20" Width="148" Padding="0"
                                        ></TextBox>
            </StackPanel>
            <DataTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" TargetName="ControlBorder" Value="{DynamicResource MahApps.Brushes.Accent2}"/>
                    <Setter Property="BorderThickness" TargetName="ControlBorder" Value="3"/>
                    <Setter Property="Background" TargetName="ControlRoot" Value="Transparent"/>
                    <Setter Property="Background" TargetName="ControlBorder" Value="Transparent"/>
                </Trigger>
                <DataTrigger Binding="{Binding IsSelected,RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Value="True">
                    <Setter Property="BorderBrush" TargetName="ControlBorder" Value="{DynamicResource MahApps.Brushes.Highlight}"/>
                    <Setter Property="BorderThickness" TargetName="ControlBorder" Value="3"/>
                    <Setter Property="Background" TargetName="ControlRoot" Value="Transparent"/>
                    <Setter Property="Background" TargetName="ControlBorder" Value="Transparent"/>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>

    </UserControl.Resources>

    <!--When changing Grid as container root in future, make sure to update bindings that rely on RelativeSource of AncestoryType Grid e.g. context menu
        Ancestor level 2 must be used since listbox grouping introduces an additional Grid in between-->
    <Grid Background="{DynamicResource MahApps.Brushes.Control.Background}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
        </Grid.RowDefinitions>
        <DockPanel Grid.Row="0">
            <!-- SearchBox and Back button on left-->
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" DockPanel.Dock="Left">
                <StackPanel DataContext="{Binding ActiveApplication}" IsHitTestVisible="True" dd:DragDrop.IsDragSource="True"
                            Background="{DynamicResource MahApps.Brushes.Control.Background}" ToolTip="{Binding ApplicationName}" >
                    <ContentControl x:Name="ApplicationIcon"  Foreground="{DynamicResource MahApps.Brushes.Accent}"                                
                                Margin="2" Width="28" Height="28" Content="{StaticResource ApplicationIcon}" IsHitTestVisible="False">
                    </ContentControl>
                </StackPanel>
               
                <TextBox Name="Filter" Margin="6,1,0,1" Text="{Binding FilterText,UpdateSourceTrigger=PropertyChanged}" controls:TextBoxHelper.ClearTextButton="True"                      
                             controls:TextBoxHelper.UseFloatingWatermark="False"                     
                             controls:TextBoxHelper.Watermark="Search"   Grid.Column="0" HorizontalAlignment="Left"
                                 Width="250"/>
                <Separator Width="1" Margin="10,0,0,0" BorderThickness="1" BorderBrush="{DynamicResource MahApps.Brushes.Accent}"/>
                <Button x:Name="BackButton" Margin="0,0,2,0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"                                          
                                            Height="28" Width="28" ToolTip="Go back to application view"                                                                                      
                                            cal:Message.Attach="[Event Click] = [Action GoBack()]"
                                            Style="{StaticResource EditControlButtonStyle}"
                                            Content="{iconPacks:FontAwesome ArrowAltCircleLeftRegular, Width=24, Height=24}"/>
            </StackPanel>
            <Separator Width="1" Margin="10,0,10,0" BorderThickness="2" BorderBrush="{DynamicResource MahApps.Brushes.Accent}" DockPanel.Dock="Left"/>
            <!-- Screen management on right-->
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" DockPanel.Dock="Left">
                <ComboBox x:Name="Screens" SelectedItem="{Binding SelectedScreen}" MinWidth="180" Style="{DynamicResource MahApps.Styles.ComboBox}"/>
                <Separator Width="1" Margin="10,0,0,0" BorderThickness="1" BorderBrush="{DynamicResource MahApps.Brushes.Accent}"/>
                <Button x:Name="AddScreenButton" Margin="0,0,2,0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"                                          
                                            Height="28" Width="28" ToolTip="Create a new application screen"                                                                                    
                                            cal:Message.Attach="[Event Click] = [Action CreateScreen()]"
                                            Style="{StaticResource EditControlButtonStyle}"
                                            Content="{iconPacks:Material PlusCircleOutline, Width=24, Height=24}"/>
                <Separator Width="1" Margin="10,0,0,0" BorderThickness="1" BorderBrush="{DynamicResource MahApps.Brushes.Accent}"/>
                <Button x:Name="RenameScreenButton" Margin="0,0,2,0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"                                          
                                            Height="26" Width="26" ToolTip="Create a new application screen"                                                                                    
                                            cal:Message.Attach="[Event Click] = [Action RenameScreen()]"
                                            Style="{StaticResource EditControlButtonStyle}"
                                            Content="{iconPacks:FontAwesome PencilAltSolid, Width=24, Height=24}"/>
            </StackPanel>
            
        </DockPanel>        
        
        <ListBox  x:Name="Controls" Grid.Row="1" SelectedItem="{Binding SelectedControl}" dd:DragDrop.IsDragSource="True" 
                          ItemTemplate="{StaticResource ControlItemTemplate}"
                          Width="{Binding Path=Width, RelativeSource={RelativeSource AncestorType={x:Type Grid}}}"
                          ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.HorizontalScrollBarVisibility="Disabled">
            <ListBox.GroupStyle>
                <GroupStyle>
                    <GroupStyle.HeaderTemplate>
                        <DataTemplate>
                            <TextBlock  Text="{Binding Path= Name}"/>
                        </DataTemplate>
                    </GroupStyle.HeaderTemplate>
                    <GroupStyle.ContainerStyle>
                        <Style TargetType="{x:Type GroupItem}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <Expander Header="{Binding Name}" IsExpanded="True"
                                                  Background="{DynamicResource MahApps.Brushes.Window.Background}"     
                                                  controls:HeaderedControlHelper.HeaderBackground="{DynamicResource MahApps.Brushes.Window.Background}"
                                                  BorderThickness="0" FontSize="11">
                                            <ItemsPresenter />
                                        </Expander>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </GroupStyle.ContainerStyle>
                </GroupStyle>
            </ListBox.GroupStyle>
            <ListBox.ItemsPanel>
                <ItemsPanelTemplate>
                    <WrapPanel  IsItemsHost="True"  Width="{Binding Path=Width, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}" Orientation="Horizontal"/>
                </ItemsPanelTemplate>
            </ListBox.ItemsPanel>
            <ListBox.ItemContainerStyle>
                <Style TargetType="ListBoxItem">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListBoxItem">
                                <ContentPresenter/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListBox.ItemContainerStyle>

        </ListBox>
    </Grid>

</UserControl>

