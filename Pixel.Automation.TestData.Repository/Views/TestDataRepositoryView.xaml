<UserControl x:Class="Pixel.Automation.TestData.Repository.Views.TestDataRepositoryView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"        
             xmlns:cal="http://www.caliburnproject.org"
             xmlns:dd="clr-namespace:GongSolutions.Wpf.DragDrop;assembly=GongSolutions.Wpf.DragDrop"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:core="clr-namespace:Pixel.Automation.Core.TestData;assembly=Pixel.Automation.Core" 
             xmlns:local="clr-namespace:Pixel.Automation.TestData.Repository.Views"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    
    <UserControl.Resources>

        <Style x:Key="AddButton" TargetType="Button">
            <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Control.Background}"></Setter>
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Accent}"/>
            <Setter Property="Width" Value="32"/>
            <Setter Property="Height" Value="32"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border  Background="{DynamicResource  MahApps.Brushes.Control.Background}" BorderThickness="0" IsHitTestVisible="True">
                            <iconPacks:PackIconMaterial x:Name="PlusIcon" Width="{TemplateBinding Width}"
                                        Height="{TemplateBinding Height}" IsHitTestVisible="False"
                                        Margin="2"
                                        Padding="4"
                                        Foreground="{DynamicResource MahApps.Brushes.Accent}"
                                        Kind="PlusCircleOutline" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="PlusIcon" Property="Foreground" Value="Gray"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ContextMenu">
                <Setter.Value>
                    <ContextMenu>
                        <MenuItem Header="Code Based"  cal:Message.Attach="[Event Click] = [Action CreateCodedTestDataSource()]" />
                        <MenuItem Header="From Csv File" cal:Message.Attach="[Event Click] = [Action CreateCsvTestDataSource()]" />
                    </ContextMenu>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type ListBoxItem}" x:Key="TestDataListBoxItem">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <ContentPresenter x:Name="IconListBoxItem"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Accent2}"/>
                </Trigger>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Highlight}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <DataTemplate DataType="{x:Type core:DataSourceConfiguration}">
            <Border  Background="{DynamicResource  MahApps.Brushes.Control.Background}" BorderThickness="0" IsHitTestVisible="True">
                <iconPacks:PackIconOcticons Width="{TemplateBinding Width}"
                                        Height="{TemplateBinding Height}" IsHitTestVisible="False"
                                        Margin="2"
                                        Padding="4"                                      
                                        Kind="FileCode" />
            </Border>            
        </DataTemplate>

        <DataTemplate DataType="{x:Type core:CsvDataSourceConfiguration}">
            <Border  Background="{DynamicResource  MahApps.Brushes.Control.Background}" BorderThickness="0" IsHitTestVisible="True">
                <iconPacks:PackIconMaterial Width="{TemplateBinding Width}" IsHitTestVisible="False"
                                        Height="{TemplateBinding Height}"
                                        Margin="2"
                                        Padding="4"                                     
                                        Kind="FileDelimited" />
            </Border>          
        </DataTemplate>

        <Style x:Key="TestDataListStyle" TargetType="ListBox">
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <WrapPanel  IsItemsHost="True"  Width="{Binding Path=Width, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}" Orientation="Horizontal"/>
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <StackPanel x:Name="TestDataPlaceHolder" Margin="10" dd:DragDrop.IsDragSource="True"
                                    Orientation="Vertical" Height="80" Width="Auto" Background="{DynamicResource MahApps.Brushes.Control.Background}">
                            <StackPanel.ContextMenu>
                                <ContextMenu>
                                    <ContextMenu.Template>
                                        <ControlTemplate>
                                            <StackPanel>
                                                <MenuItem x:Name="Edit" Header="Edit" cal:Action.TargetWithoutContext="{Binding Path=DataContext, RelativeSource={RelativeSource AncestorType={x:Type Grid}}}" cal:Message.Attach="[Event Click] = [Action EditDataSource($dataContext)]" ></MenuItem>
                                                <MenuItem x:Name="Delete" Header="Delete" cal:Action.TargetWithoutContext="{Binding Path=DataContext, RelativeSource={RelativeSource AncestorType={x:Type Grid}}}" cal:Message.Attach="[Event Click] = [Action Delete($dataContext)]" ></MenuItem>
                                            </StackPanel>
                                        </ControlTemplate>
                                    </ContextMenu.Template>
                                </ContextMenu>
                            </StackPanel.ContextMenu>

                            <ContentControl x:Name="Icon" Content="{Binding MetaData}" Background="{DynamicResource MahApps.Brushes.Control.Background}"
                                            Margin="2" Width="40" Height="40" ToolTip="{Binding Name}"></ContentControl>

                            <TextBlock x:Name="Name" Text="{Binding Name}"   Margin="5"  IsHitTestVisible="True" ToolTip="{Binding Name}"
                                       Height="Auto" MaxWidth="80" HorizontalAlignment="Center" TextTrimming="CharacterEllipsis"
                                         cal:Action.TargetWithoutContext="{Binding Path=DataContext, RelativeSource={RelativeSource AncestorType={x:Type Grid}}}"
                            ></TextBlock>
                        </StackPanel>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemContainerStyle" Value="{StaticResource TestDataListBoxItem}"/>
        </Style>

    </UserControl.Resources>

    <Grid Margin="5,5,0,0" Background="{DynamicResource MahApps.Brushes.Control.Background}">

        <StackPanel x:Name="TestDataSourceView" HorizontalAlignment="Stretch"  cal:Message.Attach="[Event PreviewMouseLeftButtonDown] = [Action Activate()]"
                    Margin="0,4,0,6"  Orientation="Vertical">
            <StackPanel DataContext="{Binding ActiveInstance}">

                <StackPanel Orientation="Horizontal" Grid.Row="0">
                    <TextBox Name="Filter" Margin="6,1,0,1" Text="{Binding FilterText,UpdateSourceTrigger=PropertyChanged}" controls:TextBoxHelper.ClearTextButton="True"                      
                             controls:TextBoxHelper.UseFloatingWatermark="False" IsEnabled="True"                     
                             controls:TextBoxHelper.Watermark="Search"   Grid.Column="0" HorizontalAlignment="Left"
                                 Width="250"/>
                    <Separator Width="1" Margin="10,0,0,0" BorderThickness="1" BorderBrush="{DynamicResource MahApps.Brushes.Accent}"/>
                    <Button x:Name="Add" Click="AddDataSourceClick" HorizontalAlignment="Right"
                            IsEnabled="{Binding ElementName=TestDataSourceView, Path=DataContext.IsTestProcessOpen}"
                            Margin="0,0,10,0" Style="{StaticResource AddButton}"/>
                </StackPanel>

                <ListBox  x:Name="TestDataSourceCollection" 
                    ItemsSource="{Binding TestDataSourceCollection}"
                    SelectedItem="{Binding SelectedTestDataSource}"
                    Width="{Binding Path=Width, RelativeSource={RelativeSource AncestorType={x:Type Grid}}}"                
                    Style="{StaticResource TestDataListStyle}" BorderThickness="0" Background="{DynamicResource MahApps.Brushes.Control.Background}"                 
                    ScrollViewer.VerticalScrollBarVisibility="Auto"
                    ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                </ListBox>

            </StackPanel>
        </StackPanel>
    </Grid>

</UserControl>
